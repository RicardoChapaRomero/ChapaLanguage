
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSINGBRACKET CLOSINGPAR COMA COMMENT DIM DIVIDE DO EIF ELSE END EQUALS EQUALTO FALSE FLOAT FLOATVAL FOR GOSUB GREATHER GREATHEREQUAL ID IF INPUT INT INTVAL LET MINUS MULTIPLY NEXT NOT NOTEQUAL OPENBRACKET OPENPAR OR PLUS PRINT PROGRAM REPEAT RETURN SMALLER SMALLEREQUAL SUBPROCEDURE THEN TO TRUE TWOPOINTS UNTIL WEND WHILE WORD WORDVAL\n  PROGRAMA : PROGRAM V M endProgram S END\n  \n  endProgram :\n  \n    V : DIM setType Idv AS T Arr\n      | empty\n  \n  Arr : OPENBRACKET EA CLOSINGBRACKET Arr\n      | OPENBRACKET ID CLOSINGBRACKET Arr\n      | empty\n  \n  T : INT\n    | FLOAT\n    | WORD\n  \n  S : SUBPROCEDURE ID fillSub TWOPOINTS M RETURN endProcedure S\n    | empty\n  \n  fillSub :\n  \n  endProcedure :\n  \n  M : F M\n    | empty\n  \n  F : E F\n    | empty\n  \n  E : LET setType Idv EQUALS Ex\n    | DIM setType Idv AS T Arr\n    | IF EL THEN first_conditional F Esf EIF final_conditional\n    | FOR ID EQUALS EA for_assignation TO Ex for_conditional DO for_save_conditional F NEXT ID for_conditional_end\n    | WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional\n    | REPEAT while_first_conditional F UNTIL EL repeat_conditional\n    | GOSUB ID\n    | INPUT IDEx\n    | PRINT Ex\n  \n  for_assignation :\n  \n  for_conditional :\n  \n  for_save_conditional :\n  \n  for_conditional_end :\n  \n  repeat_conditional :\n  \n  while_first_conditional :\n  \n  while_second_conditional :\n  \n  while_final_conditional :\n  \n  first_conditional :\n  \n  second_conditional :\n  \n  final_conditional :\n  \n  Esf : ELSE second_conditional F\n      | empty\n  \n  Idv : ID COMA Idv\n      | ID\n  \n  setType :\n  \n  IDEx : ID\n       | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  Ex : EA\n     | ES\n     | EL\n     | ID\n  \n  ES : WORDVAL\n  \n  EA : EA PLUS P\n     | EA MINUS P\n     | P\n  \n  P : P MULTIPLY N\n    | P DIVIDE N\n    | N\n  \n  N : cte saveID\n    | ID saveID\n    | OPENPAR EA CLOSINGPAR\n    | ID OPENBRACKET INTVAL CLOSINGBRACKET\n    | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  saveID :\n  \n  cte : INTVAL\n      | FLOATVAL\n  \n  EL : TRUE\n     | FALSE \n     | OPENPAR O CLOSINGPAR\n     | OPENPAR O CLOSINGPAR OL EL\n  \n  OL : AND\n     | OR\n     | NOT\n  \n  O : Ex GREATHER Ex\n    | Ex GREATHEREQUAL Ex\n    | Ex SMALLER Ex\n    | Ex SMALLEREQUAL Ex\n    | Ex NOTEQUAL Ex\n    | Ex EQUALTO Ex\n  \n  O : Ex error Ex\n  \n  empty :\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,72,],[0,-1,]),'DIM':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[4,11,-4,11,-18,11,-33,-17,-18,-65,-66,11,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,11,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,11,-32,-60,-3,-7,11,-20,-37,-68,-24,-45,-61,-38,11,-35,-79,-79,-21,-23,-5,-6,-30,11,-31,-22,]),'LET':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[-79,10,-4,10,-18,10,-33,-17,-18,-65,-66,10,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,10,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,10,-32,-60,-3,-7,10,-20,-37,-68,-24,-45,-61,-38,10,-35,-79,-79,-21,-23,-5,-6,-30,10,-31,-22,]),'IF':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[-79,12,-4,12,-18,12,-33,-17,-18,-65,-66,12,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,12,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,12,-32,-60,-3,-7,12,-20,-37,-68,-24,-45,-61,-38,12,-35,-79,-79,-21,-23,-5,-6,-30,12,-31,-22,]),'FOR':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[-79,13,-4,13,-18,13,-33,-17,-18,-65,-66,13,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,13,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,13,-32,-60,-3,-7,13,-20,-37,-68,-24,-45,-61,-38,13,-35,-79,-79,-21,-23,-5,-6,-30,13,-31,-22,]),'WHILE':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[-79,14,-4,14,-18,14,-33,-17,-18,-65,-66,14,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,14,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,14,-32,-60,-3,-7,14,-20,-37,-68,-24,-45,-61,-38,14,-35,-79,-79,-21,-23,-5,-6,-30,14,-31,-22,]),'REPEAT':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[-79,15,-4,15,-18,15,-33,-17,-18,-65,-66,15,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,15,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,15,-32,-60,-3,-7,15,-20,-37,-68,-24,-45,-61,-38,15,-35,-79,-79,-21,-23,-5,-6,-30,15,-31,-22,]),'GOSUB':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[-79,16,-4,16,-18,16,-33,-17,-18,-65,-66,16,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,16,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,16,-32,-60,-3,-7,16,-20,-37,-68,-24,-45,-61,-38,16,-35,-79,-79,-21,-23,-5,-6,-30,16,-31,-22,]),'INPUT':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[-79,17,-4,17,-18,17,-33,-17,-18,-65,-66,17,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,17,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,17,-32,-60,-3,-7,17,-20,-37,-68,-24,-45,-61,-38,17,-35,-79,-79,-21,-23,-5,-6,-30,17,-31,-22,]),'PRINT':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,88,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,128,129,131,133,136,137,138,142,143,145,146,147,149,152,153,154,156,158,161,162,],[-79,18,-4,18,-18,18,-33,-17,-18,-65,-66,18,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,18,-67,-62,-34,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,18,-32,-60,-3,-7,18,-20,-37,-68,-24,-45,-61,-38,18,-35,-79,-79,-21,-23,-5,-6,-30,18,-31,-22,]),'SUBPROCEDURE':([2,3,5,6,7,8,9,20,21,22,23,27,28,33,34,35,36,37,38,39,40,41,42,44,45,46,47,64,69,77,85,91,92,95,96,97,98,99,100,101,104,105,121,123,125,127,129,133,136,137,138,142,145,146,147,148,149,152,153,154,155,161,162,],[-79,-79,-4,-2,-79,-16,-79,51,-15,-17,-18,-65,-66,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-58,-57,-67,-62,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,-32,-60,-3,-7,-20,-68,-24,-45,-61,-38,-35,-79,-79,-14,-21,-23,-5,-6,51,-31,-22,]),'END':([2,3,5,6,7,8,9,20,21,22,23,27,28,33,34,35,36,37,38,39,40,41,42,44,45,46,47,50,52,64,69,77,85,91,92,95,96,97,98,99,100,101,104,105,121,123,125,127,129,133,136,137,138,142,145,146,147,148,149,152,153,154,155,157,161,162,],[-79,-79,-4,-2,-79,-16,-79,-79,-15,-17,-18,-65,-66,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,72,-12,-58,-57,-67,-62,-51,-52,-54,-55,-59,-79,-8,-9,-10,-19,-79,-32,-60,-3,-7,-20,-68,-24,-45,-61,-38,-35,-79,-79,-14,-21,-23,-5,-6,-79,-11,-31,-22,]),'ID':([4,10,11,13,16,17,18,19,24,25,29,43,51,58,61,62,63,65,66,67,71,74,78,79,80,81,82,83,84,87,90,94,126,134,160,],[-43,-43,-43,30,33,35,40,49,49,49,40,40,73,85,-43,85,85,-43,85,85,49,40,40,40,40,40,40,40,40,85,49,49,140,40,161,]),'RETURN':([7,8,9,21,22,23,27,28,33,34,35,36,37,38,39,40,41,42,44,45,46,47,64,69,77,85,91,92,95,96,97,99,100,101,104,105,121,123,127,128,129,133,136,137,138,141,142,145,146,147,149,152,153,154,161,162,],[-79,-16,-79,-15,-17,-18,-65,-66,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-58,-57,-67,-62,-51,-52,-54,-55,-59,-8,-9,-10,-19,-79,-32,-60,-7,-79,-20,-68,-24,-45,-61,148,-38,-35,-79,-79,-21,-23,-5,-6,-31,-22,]),'UNTIL':([9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,60,64,69,77,85,91,92,95,96,97,99,100,101,104,105,121,123,127,129,133,136,137,138,142,145,146,147,149,152,153,154,161,162,],[-79,-33,-17,-18,-65,-66,-79,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,89,-58,-57,-67,-62,-51,-52,-54,-55,-59,-8,-9,-10,-19,-79,-32,-60,-7,-20,-68,-24,-45,-61,-38,-35,-79,-79,-21,-23,-5,-6,-31,-22,]),'ELSE':([9,22,23,27,28,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,91,92,95,96,97,99,100,101,104,105,106,121,123,127,129,133,136,137,138,142,145,146,147,149,152,153,154,161,162,],[-79,-17,-18,-65,-66,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,-79,-67,-62,-51,-52,-54,-55,-59,-8,-9,-10,-19,-79,131,-32,-60,-7,-20,-68,-24,-45,-61,-38,-35,-79,-79,-21,-23,-5,-6,-31,-22,]),'EIF':([9,22,23,27,28,33,34,35,36,37,38,39,40,41,42,44,45,46,47,55,64,69,76,77,85,91,92,95,96,97,99,100,101,104,105,106,121,123,127,129,130,131,132,133,136,137,138,142,143,145,146,147,149,150,152,153,154,161,162,],[-79,-17,-18,-65,-66,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-36,-58,-57,-79,-67,-62,-51,-52,-54,-55,-59,-8,-9,-10,-19,-79,-79,-32,-60,-7,-20,142,-37,-40,-68,-24,-45,-61,-38,-79,-35,-79,-79,-21,-39,-23,-5,-6,-31,-22,]),'WEND':([9,22,23,27,28,33,34,35,36,37,38,39,40,41,42,44,45,46,47,64,69,77,85,88,91,92,95,96,97,99,100,101,104,105,120,121,123,127,129,133,135,136,137,138,142,145,146,147,149,152,153,154,161,162,],[-79,-17,-18,-65,-66,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-58,-57,-67,-62,-34,-51,-52,-54,-55,-59,-8,-9,-10,-19,-79,-79,-32,-60,-7,-20,-68,145,-24,-45,-61,-38,-35,-79,-79,-21,-23,-5,-6,-31,-22,]),'NEXT':([9,22,23,27,28,33,34,35,36,37,38,39,40,41,42,44,45,46,47,64,69,77,85,91,92,95,96,97,99,100,101,104,105,121,123,127,129,133,136,137,138,142,145,146,147,149,152,153,154,156,158,159,161,162,],[-79,-17,-18,-65,-66,-25,-26,-44,-27,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,-58,-57,-67,-62,-51,-52,-54,-55,-59,-8,-9,-10,-19,-79,-32,-60,-7,-20,-68,-24,-45,-61,-38,-35,-79,-79,-21,-23,-5,-6,-30,-79,160,-31,-22,]),'TRUE':([12,14,18,29,31,43,74,78,79,80,81,82,83,84,89,107,108,109,110,134,],[27,-33,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-69,-70,-71,27,]),'FALSE':([12,14,18,29,31,43,74,78,79,80,81,82,83,84,89,107,108,109,110,134,],[28,-33,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-69,-70,-71,28,]),'OPENPAR':([12,14,18,29,31,43,58,62,63,66,67,74,78,79,80,81,82,83,84,87,89,107,108,109,110,126,134,],[29,-33,43,43,29,43,87,87,87,87,87,43,43,43,43,43,43,43,43,87,29,29,-69,-70,-71,87,43,]),'WORDVAL':([18,29,43,74,78,79,80,81,82,83,84,134,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'INTVAL':([18,29,43,58,62,63,65,66,67,74,78,79,80,81,82,83,84,87,126,134,],[46,46,46,46,46,46,93,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'FLOATVAL':([18,29,43,58,62,63,66,67,74,78,79,80,81,82,83,84,87,126,134,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'THEN':([26,27,28,77,133,],[55,-65,-66,-67,-68,]),'GREATHER':([27,28,37,38,39,40,41,42,44,45,46,47,57,64,68,69,77,85,91,92,95,96,97,123,133,138,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,78,-58,-46,-57,-67,-62,-51,-52,-54,-55,-59,-60,-68,-61,]),'GREATHEREQUAL':([27,28,37,38,39,40,41,42,44,45,46,47,57,64,68,69,77,85,91,92,95,96,97,123,133,138,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,79,-58,-46,-57,-67,-62,-51,-52,-54,-55,-59,-60,-68,-61,]),'SMALLER':([27,28,37,38,39,40,41,42,44,45,46,47,57,64,68,69,77,85,91,92,95,96,97,123,133,138,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,80,-58,-46,-57,-67,-62,-51,-52,-54,-55,-59,-60,-68,-61,]),'SMALLEREQUAL':([27,28,37,38,39,40,41,42,44,45,46,47,57,64,68,69,77,85,91,92,95,96,97,123,133,138,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,81,-58,-46,-57,-67,-62,-51,-52,-54,-55,-59,-60,-68,-61,]),'NOTEQUAL':([27,28,37,38,39,40,41,42,44,45,46,47,57,64,68,69,77,85,91,92,95,96,97,123,133,138,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,82,-58,-46,-57,-67,-62,-51,-52,-54,-55,-59,-60,-68,-61,]),'EQUALTO':([27,28,37,38,39,40,41,42,44,45,46,47,57,64,68,69,77,85,91,92,95,96,97,123,133,138,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,83,-58,-46,-57,-67,-62,-51,-52,-54,-55,-59,-60,-68,-61,]),'error':([27,28,37,38,39,40,41,42,44,45,46,47,57,64,68,69,77,85,91,92,95,96,97,123,133,138,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,84,-58,-46,-57,-67,-62,-51,-52,-54,-55,-59,-60,-68,-61,]),'DO':([27,28,37,38,39,40,41,42,44,45,46,47,59,64,69,77,85,91,92,95,96,97,123,133,138,144,151,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,88,-58,-57,-67,-62,-51,-52,-54,-55,-59,-60,-68,-61,-29,156,]),'CLOSINGPAR':([27,28,37,38,39,40,41,42,44,45,46,47,56,64,68,69,77,85,91,92,95,96,97,111,112,113,114,115,116,117,119,123,133,138,],[-65,-66,-46,-47,-48,-49,-53,-50,-56,-62,-63,-64,77,-58,97,-57,-67,-62,-51,-52,-54,-55,-59,-72,-73,-74,-75,-76,-77,-78,97,-60,-68,-61,]),'EQUALS':([30,49,53,102,],[58,-42,74,-41,]),'OPENBRACKET':([35,40,85,98,99,100,101,105,140,146,147,],[61,65,65,126,-8,-9,-10,126,65,126,126,]),'PLUS':([37,40,41,44,45,46,47,64,68,69,85,86,91,92,95,96,97,119,123,138,139,140,],[62,-62,-53,-56,-62,-63,-64,-58,62,-57,-62,62,-51,-52,-54,-55,-59,62,-60,-61,62,-62,]),'MINUS':([37,40,41,44,45,46,47,64,68,69,85,86,91,92,95,96,97,119,123,138,139,140,],[63,-62,-53,-56,-62,-63,-64,-58,63,-57,-62,63,-51,-52,-54,-55,-59,63,-60,-61,63,-62,]),'MULTIPLY':([40,41,44,45,46,47,64,69,85,91,92,95,96,97,123,138,140,],[-62,66,-56,-62,-63,-64,-58,-57,-62,66,66,-54,-55,-59,-60,-61,-62,]),'DIVIDE':([40,41,44,45,46,47,64,69,85,91,92,95,96,97,123,138,140,],[-62,67,-56,-62,-63,-64,-58,-57,-62,67,67,-54,-55,-59,-60,-61,-62,]),'TO':([41,44,45,46,47,64,69,85,86,91,92,95,96,97,118,123,138,],[-53,-56,-62,-63,-64,-58,-57,-62,-28,-51,-52,-54,-55,-59,134,-60,-61,]),'CLOSINGBRACKET':([41,44,45,46,47,49,64,69,85,91,92,93,95,96,97,102,122,123,124,138,139,140,],[-53,-56,-62,-63,-64,-42,-58,-57,-62,-51,-52,123,-54,-55,-59,-41,137,-60,138,-61,146,147,]),'AS':([48,49,54,102,],[70,-42,75,-41,]),'COMA':([49,],[71,]),'INT':([70,75,],[99,99,]),'FLOAT':([70,75,],[100,100,]),'WORD':([70,75,],[101,101,]),'TWOPOINTS':([73,103,],[-13,128,]),'AND':([77,],[108,]),'OR':([77,],[109,]),'NOT':([77,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'V':([2,],[3,]),'empty':([2,3,7,9,20,32,76,98,105,106,120,128,143,146,147,155,158,],[5,8,8,23,52,23,23,127,127,132,23,8,23,127,127,52,23,]),'M':([3,7,128,],[6,21,141,]),'F':([3,7,9,32,76,120,128,143,158,],[7,7,22,60,106,135,7,150,159,]),'E':([3,7,9,32,76,120,128,143,158,],[9,9,9,9,9,9,9,9,9,]),'setType':([4,10,11,61,65,],[19,24,25,90,94,]),'endProgram':([6,],[20,]),'EL':([12,18,29,31,43,74,78,79,80,81,82,83,84,89,107,134,],[26,39,39,59,39,39,39,39,39,39,39,39,39,121,133,39,]),'while_first_conditional':([14,15,],[31,32,]),'IDEx':([17,],[34,]),'Ex':([18,29,43,74,78,79,80,81,82,83,84,134,],[36,57,57,104,111,112,113,114,115,116,117,144,]),'EA':([18,29,43,58,74,78,79,80,81,82,83,84,87,126,134,],[37,37,68,86,37,37,37,37,37,37,37,37,119,139,37,]),'ES':([18,29,43,74,78,79,80,81,82,83,84,134,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'P':([18,29,43,58,62,63,74,78,79,80,81,82,83,84,87,126,134,],[41,41,41,41,91,92,41,41,41,41,41,41,41,41,41,41,41,]),'N':([18,29,43,58,62,63,66,67,74,78,79,80,81,82,83,84,87,126,134,],[44,44,44,44,44,44,95,96,44,44,44,44,44,44,44,44,44,44,44,]),'cte':([18,29,43,58,62,63,66,67,74,78,79,80,81,82,83,84,87,126,134,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'Idv':([19,24,25,71,90,94,],[48,53,54,102,122,124,]),'S':([20,155,],[50,157,]),'O':([29,43,],[56,56,]),'saveID':([40,45,85,140,],[64,69,64,64,]),'first_conditional':([55,],[76,]),'T':([70,75,],[98,105,]),'fillSub':([73,],[103,]),'OL':([77,],[107,]),'for_assignation':([86,],[118,]),'while_second_conditional':([88,],[120,]),'Arr':([98,105,146,147,],[125,129,153,154,]),'Esf':([106,],[130,]),'repeat_conditional':([121,],[136,]),'second_conditional':([131,],[143,]),'final_conditional':([142,],[149,]),'for_conditional':([144,],[151,]),'while_final_conditional':([145,],[152,]),'endProcedure':([148,],[155,]),'for_save_conditional':([156,],[158,]),'for_conditional_end':([161,],[162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM V M endProgram S END','PROGRAMA',6,'p_PROGRAMA','syntax_analyzer.py',363),
  ('endProgram -> <empty>','endProgram',0,'p_endProgram','syntax_analyzer.py',374),
  ('V -> DIM setType Idv AS T Arr','V',6,'p_V','syntax_analyzer.py',381),
  ('V -> empty','V',1,'p_V','syntax_analyzer.py',382),
  ('Arr -> OPENBRACKET EA CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',391),
  ('Arr -> OPENBRACKET ID CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',392),
  ('Arr -> empty','Arr',1,'p_Arr','syntax_analyzer.py',393),
  ('T -> INT','T',1,'p_T','syntax_analyzer.py',398),
  ('T -> FLOAT','T',1,'p_T','syntax_analyzer.py',399),
  ('T -> WORD','T',1,'p_T','syntax_analyzer.py',400),
  ('S -> SUBPROCEDURE ID fillSub TWOPOINTS M RETURN endProcedure S','S',8,'p_S','syntax_analyzer.py',406),
  ('S -> empty','S',1,'p_S','syntax_analyzer.py',407),
  ('fillSub -> <empty>','fillSub',0,'p_fillSub','syntax_analyzer.py',417),
  ('endProcedure -> <empty>','endProcedure',0,'p_endProcedure','syntax_analyzer.py',424),
  ('M -> F M','M',2,'p_M','syntax_analyzer.py',433),
  ('M -> empty','M',1,'p_M','syntax_analyzer.py',434),
  ('F -> E F','F',2,'p_F','syntax_analyzer.py',439),
  ('F -> empty','F',1,'p_F','syntax_analyzer.py',440),
  ('E -> LET setType Idv EQUALS Ex','E',5,'p_E','syntax_analyzer.py',445),
  ('E -> DIM setType Idv AS T Arr','E',6,'p_E','syntax_analyzer.py',446),
  ('E -> IF EL THEN first_conditional F Esf EIF final_conditional','E',8,'p_E','syntax_analyzer.py',447),
  ('E -> FOR ID EQUALS EA for_assignation TO Ex for_conditional DO for_save_conditional F NEXT ID for_conditional_end','E',14,'p_E','syntax_analyzer.py',448),
  ('E -> WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional','E',8,'p_E','syntax_analyzer.py',449),
  ('E -> REPEAT while_first_conditional F UNTIL EL repeat_conditional','E',6,'p_E','syntax_analyzer.py',450),
  ('E -> GOSUB ID','E',2,'p_E','syntax_analyzer.py',451),
  ('E -> INPUT IDEx','E',2,'p_E','syntax_analyzer.py',452),
  ('E -> PRINT Ex','E',2,'p_E','syntax_analyzer.py',453),
  ('for_assignation -> <empty>','for_assignation',0,'p_for_assignation','syntax_analyzer.py',475),
  ('for_conditional -> <empty>','for_conditional',0,'p_for_conditional','syntax_analyzer.py',484),
  ('for_save_conditional -> <empty>','for_save_conditional',0,'p_for_save_conditional','syntax_analyzer.py',495),
  ('for_conditional_end -> <empty>','for_conditional_end',0,'p_for_conditional_end','syntax_analyzer.py',507),
  ('repeat_conditional -> <empty>','repeat_conditional',0,'p_repeat_conditional','syntax_analyzer.py',522),
  ('while_first_conditional -> <empty>','while_first_conditional',0,'p_while_first_conditional','syntax_analyzer.py',532),
  ('while_second_conditional -> <empty>','while_second_conditional',0,'p_while_second_conditional','syntax_analyzer.py',541),
  ('while_final_conditional -> <empty>','while_final_conditional',0,'p_while_final_conditional','syntax_analyzer.py',553),
  ('first_conditional -> <empty>','first_conditional',0,'p_first_conditional','syntax_analyzer.py',566),
  ('second_conditional -> <empty>','second_conditional',0,'p_second_conditional','syntax_analyzer.py',577),
  ('final_conditional -> <empty>','final_conditional',0,'p_final_conditional','syntax_analyzer.py',589),
  ('Esf -> ELSE second_conditional F','Esf',3,'p_Esf','syntax_analyzer.py',597),
  ('Esf -> empty','Esf',1,'p_Esf','syntax_analyzer.py',598),
  ('Idv -> ID COMA Idv','Idv',3,'p_Idv','syntax_analyzer.py',603),
  ('Idv -> ID','Idv',1,'p_Idv','syntax_analyzer.py',604),
  ('setType -> <empty>','setType',0,'p_setType','syntax_analyzer.py',616),
  ('IDEx -> ID','IDEx',1,'p_IDEx','syntax_analyzer.py',624),
  ('IDEx -> ID OPENBRACKET setType Idv CLOSINGBRACKET','IDEx',5,'p_IDEx','syntax_analyzer.py',625),
  ('Ex -> EA','Ex',1,'p_Ex','syntax_analyzer.py',630),
  ('Ex -> ES','Ex',1,'p_Ex','syntax_analyzer.py',631),
  ('Ex -> EL','Ex',1,'p_Ex','syntax_analyzer.py',632),
  ('Ex -> ID','Ex',1,'p_Ex','syntax_analyzer.py',633),
  ('ES -> WORDVAL','ES',1,'p_ES','syntax_analyzer.py',639),
  ('EA -> EA PLUS P','EA',3,'p_EA','syntax_analyzer.py',644),
  ('EA -> EA MINUS P','EA',3,'p_EA','syntax_analyzer.py',645),
  ('EA -> P','EA',1,'p_EA','syntax_analyzer.py',646),
  ('P -> P MULTIPLY N','P',3,'p_P','syntax_analyzer.py',669),
  ('P -> P DIVIDE N','P',3,'p_P','syntax_analyzer.py',670),
  ('P -> N','P',1,'p_P','syntax_analyzer.py',671),
  ('N -> cte saveID','N',2,'p_N','syntax_analyzer.py',695),
  ('N -> ID saveID','N',2,'p_N','syntax_analyzer.py',696),
  ('N -> OPENPAR EA CLOSINGPAR','N',3,'p_N','syntax_analyzer.py',697),
  ('N -> ID OPENBRACKET INTVAL CLOSINGBRACKET','N',4,'p_N','syntax_analyzer.py',698),
  ('N -> ID OPENBRACKET setType Idv CLOSINGBRACKET','N',5,'p_N','syntax_analyzer.py',699),
  ('saveID -> <empty>','saveID',0,'p_saveID','syntax_analyzer.py',708),
  ('cte -> INTVAL','cte',1,'p_cte','syntax_analyzer.py',716),
  ('cte -> FLOATVAL','cte',1,'p_cte','syntax_analyzer.py',717),
  ('EL -> TRUE','EL',1,'p_EL','syntax_analyzer.py',723),
  ('EL -> FALSE','EL',1,'p_EL','syntax_analyzer.py',724),
  ('EL -> OPENPAR O CLOSINGPAR','EL',3,'p_EL','syntax_analyzer.py',725),
  ('EL -> OPENPAR O CLOSINGPAR OL EL','EL',5,'p_EL','syntax_analyzer.py',726),
  ('OL -> AND','OL',1,'p_OL','syntax_analyzer.py',744),
  ('OL -> OR','OL',1,'p_OL','syntax_analyzer.py',745),
  ('OL -> NOT','OL',1,'p_OL','syntax_analyzer.py',746),
  ('O -> Ex GREATHER Ex','O',3,'p_O','syntax_analyzer.py',754),
  ('O -> Ex GREATHEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',755),
  ('O -> Ex SMALLER Ex','O',3,'p_O','syntax_analyzer.py',756),
  ('O -> Ex SMALLEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',757),
  ('O -> Ex NOTEQUAL Ex','O',3,'p_O','syntax_analyzer.py',758),
  ('O -> Ex EQUALTO Ex','O',3,'p_O','syntax_analyzer.py',759),
  ('O -> Ex error Ex','O',3,'p_O_error','syntax_analyzer.py',786),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',793),
]
