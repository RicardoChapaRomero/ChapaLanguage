PROGRAM
    DIM menu, menuCycle, result, i, j, k, x, y as INT
    DIM factorial, limit, tempX, tempY, taylor as float
    DIM yFact, xPower as float

    let i = 0
    let j = 0
    let k = 0
    let menu = 0
    let menuCycle = 1
    let result = 0
    let x = 0
    let y = 0

    let factorial = 1
    let tempX = 0
    let tempY = 0

    gosub runMenu

	SUBPROCEDURE runMenu:
        while (menuCycle > 0) do
            input menu

            if (menu == 0) then
                input x
                gosub getFactorialX 

                print factorial 
            else
                if (menu == 1) then
                    input x
                    input y

                    gosub powerY
                    print result
                else
                    input x
                    gosub taylorRoutine

                    print taylor
                eif
            eif

            input menuCycle
       wend
	RETURN

    SUBPROCEDURE taylorRoutine:
        let taylor = 0
        let yFact = 0
        let xPower = 0

        for i = 0 to 100 do
            let tempX = x
            let x = i

            gosub getFactorialX
            let yFact = factorial

            let x = tempX
            let y = i

            gosub powerY

            let taylor = taylor + (result / yFact)
        next i
    return

    SUBPROCEDURE getFactorialX:
        let factorial = 1
        let factorial = factorial * x
        let limit = x - 2

        if (x == 0) then
            let factorial = 1
        else
            for j = 0 to limit do
                let x = x - 1
                let factorial = factorial * x
            next j
        eif
    return

    SUBPROCEDURE powerY:
        let result = 0
        let limit = y - 1
        let result = x

        if (y == 0) then
            let result = 1
        else
            for k = 1 to limit do
                let result = result * x
            next k
        eif
    return

END