
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSINGBRACKET CLOSINGPAR COMA COMMENT DIM DIVIDE EIF ELSE END EQUALS EQUALTO FALSE FLOAT FLOATVAL FOR GOSUB GREATHER GREATHEREQUAL ID IF INPUT INT INTVAL LET MINUS MULTIPLY NEXT NOT NOTEQUAL OPENBRACKET OPENPAR OR PLUS PRINT PROGRAM RETURN SMALLER SMALLEREQUAL SUBPROCEDURE THEN TO TRUE TWOPOINTS WEND WHILE WORD WORDVAL\n  PROGRAMA : PROGRAM V M S END\n  \n    V : DIM setType Idv AS T Arr\n      | empty\n  \n  Arr : OPENBRACKET EA CLOSINGBRACKET Arr\n      | OPENBRACKET ID CLOSINGBRACKET Arr\n      | empty\n  \n  T : INT\n    | FLOAT\n    | WORD\n  \n  S : SUBPROCEDURE ID TWOPOINTS M RETURN S\n    | empty\n  \n  M : F M\n    | empty\n  \n  F : E F\n    | empty\n  \n  E : LET setType Idv EQUALS Ex\n    | DIM setType Idv AS T Arr\n    | IF EL THEN F Esf EIF\n    | FOR ID EQUALS EA TO Ex F NEXT ID\n    | WHILE OPENPAR EL CLOSINGPAR F WEND\n    | GOSUB ID\n    | INPUT ES COMA IDEx\n    | PRINT Ex\n  \n  Idv : ID COMA Idv\n      | ID\n  \n  setType :\n  \n  Esf : ELSE F\n      | empty\n  \n  IDEx : ID\n       | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  Ex : EA\n     | ES\n     | EL\n     | ID\n  \n  ES : WORDVAL\n  \n  EA : P PLUS EA\n     | P MINUS EA\n     | P\n  \n  P : N MULTIPLY P\n    | N DIVIDE P\n    | N\n  \n  N : cte saveID\n    | ID saveID\n    | OPENPAR EA CLOSINGPAR\n    | ID OPENBRACKET INTVAL CLOSINGBRACKET\n    | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  saveID :\n  \n  cte : INTVAL\n      | FLOATVAL\n  \n  EL : TRUE \n     | FALSE \n     | OPENPAR O CLOSINGPAR\n     | OPENPAR O CLOSINGPAR OL EL\n  \n  OL : AND\n     | OR\n     | NOT\n  \n  O : Ex GREATHER Ex\n    | Ex GREATHEREQUAL Ex\n    | Ex SMALLER Ex\n    | Ex SMALLEREQUAL Ex\n    | Ex NOTEQUAL Ex\n    | Ex EQUALTO Ex\n  \n  O : Ex error Ex\n  \n  empty :\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,49,],[0,-1,]),'DIM':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,69,73,81,84,85,86,89,90,91,92,93,94,95,96,97,100,101,103,120,122,124,126,127,129,130,131,133,139,140,142,143,144,145,],[4,11,-3,11,-15,11,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,11,-43,-42,11,-52,-47,11,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,11,-45,-2,-6,-17,-18,-53,11,-20,-46,-64,-64,-30,-4,-5,-19,]),'LET':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,69,73,81,84,85,86,89,90,91,92,93,94,95,96,97,100,101,103,120,122,124,126,127,129,130,131,133,139,140,142,143,144,145,],[-64,10,-3,10,-15,10,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,10,-43,-42,10,-52,-47,10,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,10,-45,-2,-6,-17,-18,-53,10,-20,-46,-64,-64,-30,-4,-5,-19,]),'IF':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,69,73,81,84,85,86,89,90,91,92,93,94,95,96,97,100,101,103,120,122,124,126,127,129,130,131,133,139,140,142,143,144,145,],[-64,12,-3,12,-15,12,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,12,-43,-42,12,-52,-47,12,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,12,-45,-2,-6,-17,-18,-53,12,-20,-46,-64,-64,-30,-4,-5,-19,]),'FOR':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,69,73,81,84,85,86,89,90,91,92,93,94,95,96,97,100,101,103,120,122,124,126,127,129,130,131,133,139,140,142,143,144,145,],[-64,13,-3,13,-15,13,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,13,-43,-42,13,-52,-47,13,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,13,-45,-2,-6,-17,-18,-53,13,-20,-46,-64,-64,-30,-4,-5,-19,]),'WHILE':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,69,73,81,84,85,86,89,90,91,92,93,94,95,96,97,100,101,103,120,122,124,126,127,129,130,131,133,139,140,142,143,144,145,],[-64,14,-3,14,-15,14,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,14,-43,-42,14,-52,-47,14,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,14,-45,-2,-6,-17,-18,-53,14,-20,-46,-64,-64,-30,-4,-5,-19,]),'GOSUB':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,69,73,81,84,85,86,89,90,91,92,93,94,95,96,97,100,101,103,120,122,124,126,127,129,130,131,133,139,140,142,143,144,145,],[-64,15,-3,15,-15,15,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,15,-43,-42,15,-52,-47,15,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,15,-45,-2,-6,-17,-18,-53,15,-20,-46,-64,-64,-30,-4,-5,-19,]),'INPUT':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,69,73,81,84,85,86,89,90,91,92,93,94,95,96,97,100,101,103,120,122,124,126,127,129,130,131,133,139,140,142,143,144,145,],[-64,16,-3,16,-15,16,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,16,-43,-42,16,-52,-47,16,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,16,-45,-2,-6,-17,-18,-53,16,-20,-46,-64,-64,-30,-4,-5,-19,]),'PRINT':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,69,73,81,84,85,86,89,90,91,92,93,94,95,96,97,100,101,103,120,122,124,126,127,129,130,131,133,139,140,142,143,144,145,],[-64,17,-3,17,-15,17,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,17,-43,-42,17,-52,-47,17,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,17,-45,-2,-6,-17,-18,-53,17,-20,-46,-64,-64,-30,-4,-5,-19,]),'SUBPROCEDURE':([2,3,5,6,7,8,9,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,59,66,73,81,85,86,89,90,91,92,93,94,95,96,97,100,101,120,122,124,125,126,127,129,131,133,139,140,142,143,144,145,],[-64,-64,-3,20,-64,-13,-64,-12,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,-43,-42,-52,-47,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,-45,-2,-6,20,-17,-18,-53,-20,-46,-64,-64,-30,-4,-5,-19,]),'END':([2,3,5,6,7,8,9,19,21,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,59,66,73,81,85,86,89,90,91,92,93,94,95,96,97,100,101,120,122,124,125,126,127,129,131,133,136,139,140,142,143,144,145,],[-64,-64,-3,-64,-64,-13,-64,49,-11,-12,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,-43,-42,-52,-47,-22,-29,-36,-37,-44,-39,-40,-64,-7,-8,-9,-16,-64,-45,-2,-6,-64,-17,-18,-53,-20,-46,-10,-64,-64,-30,-4,-5,-19,]),'ID':([4,10,11,13,15,17,18,20,25,26,30,42,56,58,60,61,62,64,65,68,70,74,75,76,77,78,79,80,83,88,116,119,123,132,141,],[-26,-26,-26,31,33,40,48,50,48,48,40,40,81,86,-26,81,81,81,81,48,40,40,40,40,40,40,40,40,81,48,40,-26,135,48,145,]),'RETURN':([7,8,9,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,59,66,69,73,81,85,86,89,90,91,92,93,95,96,97,99,100,101,120,124,126,127,129,131,133,139,140,142,143,144,145,],[-64,-13,-64,-12,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,-43,-42,-64,-52,-47,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,125,-16,-64,-45,-6,-17,-18,-53,-20,-46,-64,-64,-30,-4,-5,-19,]),'ELSE':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,72,73,81,85,86,89,90,91,92,93,95,96,97,100,101,120,124,126,127,129,131,133,139,140,142,143,144,145,],[-64,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,-64,-43,-42,103,-52,-47,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,-16,-64,-45,-6,-17,-18,-53,-20,-46,-64,-64,-30,-4,-5,-19,]),'EIF':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,59,66,72,73,81,85,86,89,90,91,92,93,95,96,97,100,101,102,103,104,120,124,126,127,128,129,131,133,139,140,142,143,144,145,],[-64,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,-64,-43,-42,-64,-52,-47,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,-16,-64,127,-64,-28,-45,-6,-17,-18,-27,-53,-20,-46,-64,-64,-30,-4,-5,-19,]),'WEND':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,59,66,73,81,84,85,86,89,90,91,92,93,95,96,97,100,101,118,120,124,126,127,129,131,133,139,140,142,143,144,145,],[-64,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,-43,-42,-52,-47,-64,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,-16,-64,131,-45,-6,-17,-18,-53,-20,-46,-64,-64,-30,-4,-5,-19,]),'NEXT':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,59,66,73,81,85,86,89,90,91,92,93,95,96,97,100,101,120,124,126,127,129,130,131,133,137,139,140,142,143,144,145,],[-64,-14,-15,-50,-51,-21,-35,-23,-31,-32,-33,-34,-38,-41,-47,-48,-49,-43,-42,-52,-47,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,-16,-64,-45,-6,-17,-18,-53,-64,-20,-46,141,-64,-64,-30,-4,-5,-19,]),'TRUE':([12,17,30,32,42,70,74,75,76,77,78,79,80,105,106,107,108,116,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,-54,-55,-56,28,]),'FALSE':([12,17,30,32,42,70,74,75,76,77,78,79,80,105,106,107,108,116,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,-54,-55,-56,29,]),'OPENPAR':([12,14,17,30,32,42,56,61,62,64,65,70,74,75,76,77,78,79,80,83,105,106,107,108,116,123,],[30,32,42,42,30,42,83,83,83,83,83,42,42,42,42,42,42,42,42,83,30,-54,-55,-56,42,83,]),'WORDVAL':([16,17,30,42,70,74,75,76,77,78,79,80,116,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'INTVAL':([17,30,42,56,60,61,62,64,65,70,74,75,76,77,78,79,80,83,116,123,],[45,45,45,45,87,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'FLOATVAL':([17,30,42,56,61,62,64,65,70,74,75,76,77,78,79,80,83,116,123,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'THEN':([27,28,29,73,129,],[53,-50,-51,-52,-53,]),'GREATHER':([28,29,35,37,38,39,40,41,43,44,45,46,55,59,63,66,73,81,89,90,91,92,93,120,129,133,],[-50,-51,-35,-31,-32,-33,-34,-38,-41,-47,-48,-49,74,-43,-31,-42,-52,-47,-36,-37,-44,-39,-40,-45,-53,-46,]),'GREATHEREQUAL':([28,29,35,37,38,39,40,41,43,44,45,46,55,59,63,66,73,81,89,90,91,92,93,120,129,133,],[-50,-51,-35,-31,-32,-33,-34,-38,-41,-47,-48,-49,75,-43,-31,-42,-52,-47,-36,-37,-44,-39,-40,-45,-53,-46,]),'SMALLER':([28,29,35,37,38,39,40,41,43,44,45,46,55,59,63,66,73,81,89,90,91,92,93,120,129,133,],[-50,-51,-35,-31,-32,-33,-34,-38,-41,-47,-48,-49,76,-43,-31,-42,-52,-47,-36,-37,-44,-39,-40,-45,-53,-46,]),'SMALLEREQUAL':([28,29,35,37,38,39,40,41,43,44,45,46,55,59,63,66,73,81,89,90,91,92,93,120,129,133,],[-50,-51,-35,-31,-32,-33,-34,-38,-41,-47,-48,-49,77,-43,-31,-42,-52,-47,-36,-37,-44,-39,-40,-45,-53,-46,]),'NOTEQUAL':([28,29,35,37,38,39,40,41,43,44,45,46,55,59,63,66,73,81,89,90,91,92,93,120,129,133,],[-50,-51,-35,-31,-32,-33,-34,-38,-41,-47,-48,-49,78,-43,-31,-42,-52,-47,-36,-37,-44,-39,-40,-45,-53,-46,]),'EQUALTO':([28,29,35,37,38,39,40,41,43,44,45,46,55,59,63,66,73,81,89,90,91,92,93,120,129,133,],[-50,-51,-35,-31,-32,-33,-34,-38,-41,-47,-48,-49,79,-43,-31,-42,-52,-47,-36,-37,-44,-39,-40,-45,-53,-46,]),'error':([28,29,35,37,38,39,40,41,43,44,45,46,55,59,63,66,73,81,89,90,91,92,93,120,129,133,],[-50,-51,-35,-31,-32,-33,-34,-38,-41,-47,-48,-49,80,-43,-31,-42,-52,-47,-36,-37,-44,-39,-40,-45,-53,-46,]),'CLOSINGPAR':([28,29,35,37,38,39,40,41,43,44,45,46,54,57,59,63,66,73,81,89,90,91,92,93,109,110,111,112,113,114,115,117,120,129,133,],[-50,-51,-35,-31,-32,-33,-34,-38,-41,-47,-48,-49,73,84,-43,91,-42,-52,-47,-36,-37,-44,-39,-40,-57,-58,-59,-60,-61,-62,-63,91,-45,-53,-46,]),'EQUALS':([31,48,51,98,],[56,-25,70,-24,]),'COMA':([34,35,48,],[58,-35,68,]),'OPENBRACKET':([40,81,86,94,95,96,97,101,135,139,140,],[60,60,119,123,-7,-8,-9,123,60,123,123,]),'MULTIPLY':([40,43,44,45,46,59,66,81,91,120,133,135,],[-47,64,-47,-48,-49,-43,-42,-47,-44,-45,-46,-47,]),'DIVIDE':([40,43,44,45,46,59,66,81,91,120,133,135,],[-47,65,-47,-48,-49,-43,-42,-47,-44,-45,-46,-47,]),'PLUS':([40,41,43,44,45,46,59,66,81,91,92,93,120,133,135,],[-47,61,-41,-47,-48,-49,-43,-42,-47,-44,-39,-40,-45,-46,-47,]),'MINUS':([40,41,43,44,45,46,59,66,81,91,92,93,120,133,135,],[-47,62,-41,-47,-48,-49,-43,-42,-47,-44,-39,-40,-45,-46,-47,]),'TO':([41,43,44,45,46,59,66,81,82,89,90,91,92,93,120,133,],[-38,-41,-47,-48,-49,-43,-42,-47,116,-36,-37,-44,-39,-40,-45,-46,]),'CLOSINGBRACKET':([41,43,44,45,46,48,59,66,81,87,89,90,91,92,93,98,120,121,133,134,135,138,],[-38,-41,-47,-48,-49,-25,-43,-42,-47,120,-36,-37,-44,-39,-40,-24,-45,133,-46,139,140,142,]),'AS':([47,48,52,98,],[67,-25,71,-24,]),'TWOPOINTS':([50,],[69,]),'INT':([67,71,],[95,95,]),'FLOAT':([67,71,],[96,96,]),'WORD':([67,71,],[97,97,]),'AND':([73,],[106,]),'OR':([73,],[107,]),'NOT':([73,],[108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'V':([2,],[3,]),'empty':([2,3,6,7,9,53,69,72,84,94,101,103,125,130,139,140,],[5,8,21,8,24,24,8,104,24,124,124,24,21,24,124,124,]),'M':([3,7,69,],[6,22,99,]),'F':([3,7,9,53,69,84,103,130,],[7,7,23,72,7,118,128,137,]),'E':([3,7,9,53,69,84,103,130,],[9,9,9,9,9,9,9,9,]),'setType':([4,10,11,60,119,],[18,25,26,88,132,]),'S':([6,125,],[19,136,]),'EL':([12,17,30,32,42,70,74,75,76,77,78,79,80,105,116,],[27,39,39,57,39,39,39,39,39,39,39,39,39,129,39,]),'ES':([16,17,30,42,70,74,75,76,77,78,79,80,116,],[34,38,38,38,38,38,38,38,38,38,38,38,38,]),'Ex':([17,30,42,70,74,75,76,77,78,79,80,116,],[36,55,55,100,109,110,111,112,113,114,115,130,]),'EA':([17,30,42,56,61,62,70,74,75,76,77,78,79,80,83,116,123,],[37,37,63,82,89,90,37,37,37,37,37,37,37,37,117,37,134,]),'P':([17,30,42,56,61,62,64,65,70,74,75,76,77,78,79,80,83,116,123,],[41,41,41,41,41,41,92,93,41,41,41,41,41,41,41,41,41,41,41,]),'N':([17,30,42,56,61,62,64,65,70,74,75,76,77,78,79,80,83,116,123,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'cte':([17,30,42,56,61,62,64,65,70,74,75,76,77,78,79,80,83,116,123,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'Idv':([18,25,26,68,88,132,],[47,51,52,98,121,138,]),'O':([30,42,],[54,54,]),'saveID':([40,44,81,135,],[59,66,59,59,]),'IDEx':([58,],[85,]),'T':([67,71,],[94,101,]),'Esf':([72,],[102,]),'OL':([73,],[105,]),'Arr':([94,101,139,140,],[122,126,143,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM V M S END','PROGRAMA',5,'p_PROGRAMA','syntax_analyzer.py',331),
  ('V -> DIM setType Idv AS T Arr','V',6,'p_V','syntax_analyzer.py',336),
  ('V -> empty','V',1,'p_V','syntax_analyzer.py',337),
  ('Arr -> OPENBRACKET EA CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',346),
  ('Arr -> OPENBRACKET ID CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',347),
  ('Arr -> empty','Arr',1,'p_Arr','syntax_analyzer.py',348),
  ('T -> INT','T',1,'p_T','syntax_analyzer.py',353),
  ('T -> FLOAT','T',1,'p_T','syntax_analyzer.py',354),
  ('T -> WORD','T',1,'p_T','syntax_analyzer.py',355),
  ('S -> SUBPROCEDURE ID TWOPOINTS M RETURN S','S',6,'p_S','syntax_analyzer.py',361),
  ('S -> empty','S',1,'p_S','syntax_analyzer.py',362),
  ('M -> F M','M',2,'p_M','syntax_analyzer.py',367),
  ('M -> empty','M',1,'p_M','syntax_analyzer.py',368),
  ('F -> E F','F',2,'p_F','syntax_analyzer.py',373),
  ('F -> empty','F',1,'p_F','syntax_analyzer.py',374),
  ('E -> LET setType Idv EQUALS Ex','E',5,'p_E','syntax_analyzer.py',379),
  ('E -> DIM setType Idv AS T Arr','E',6,'p_E','syntax_analyzer.py',380),
  ('E -> IF EL THEN F Esf EIF','E',6,'p_E','syntax_analyzer.py',381),
  ('E -> FOR ID EQUALS EA TO Ex F NEXT ID','E',9,'p_E','syntax_analyzer.py',382),
  ('E -> WHILE OPENPAR EL CLOSINGPAR F WEND','E',6,'p_E','syntax_analyzer.py',383),
  ('E -> GOSUB ID','E',2,'p_E','syntax_analyzer.py',384),
  ('E -> INPUT ES COMA IDEx','E',4,'p_E','syntax_analyzer.py',385),
  ('E -> PRINT Ex','E',2,'p_E','syntax_analyzer.py',386),
  ('Idv -> ID COMA Idv','Idv',3,'p_Idv','syntax_analyzer.py',400),
  ('Idv -> ID','Idv',1,'p_Idv','syntax_analyzer.py',401),
  ('setType -> <empty>','setType',0,'p_setType','syntax_analyzer.py',413),
  ('Esf -> ELSE F','Esf',2,'p_Esf','syntax_analyzer.py',420),
  ('Esf -> empty','Esf',1,'p_Esf','syntax_analyzer.py',421),
  ('IDEx -> ID','IDEx',1,'p_IDEx','syntax_analyzer.py',426),
  ('IDEx -> ID OPENBRACKET setType Idv CLOSINGBRACKET','IDEx',5,'p_IDEx','syntax_analyzer.py',427),
  ('Ex -> EA','Ex',1,'p_Ex','syntax_analyzer.py',432),
  ('Ex -> ES','Ex',1,'p_Ex','syntax_analyzer.py',433),
  ('Ex -> EL','Ex',1,'p_Ex','syntax_analyzer.py',434),
  ('Ex -> ID','Ex',1,'p_Ex','syntax_analyzer.py',435),
  ('ES -> WORDVAL','ES',1,'p_ES','syntax_analyzer.py',441),
  ('EA -> P PLUS EA','EA',3,'p_EA','syntax_analyzer.py',446),
  ('EA -> P MINUS EA','EA',3,'p_EA','syntax_analyzer.py',447),
  ('EA -> P','EA',1,'p_EA','syntax_analyzer.py',448),
  ('P -> N MULTIPLY P','P',3,'p_P','syntax_analyzer.py',472),
  ('P -> N DIVIDE P','P',3,'p_P','syntax_analyzer.py',473),
  ('P -> N','P',1,'p_P','syntax_analyzer.py',474),
  ('N -> cte saveID','N',2,'p_N','syntax_analyzer.py',499),
  ('N -> ID saveID','N',2,'p_N','syntax_analyzer.py',500),
  ('N -> OPENPAR EA CLOSINGPAR','N',3,'p_N','syntax_analyzer.py',501),
  ('N -> ID OPENBRACKET INTVAL CLOSINGBRACKET','N',4,'p_N','syntax_analyzer.py',502),
  ('N -> ID OPENBRACKET setType Idv CLOSINGBRACKET','N',5,'p_N','syntax_analyzer.py',503),
  ('saveID -> <empty>','saveID',0,'p_saveID','syntax_analyzer.py',512),
  ('cte -> INTVAL','cte',1,'p_cte','syntax_analyzer.py',520),
  ('cte -> FLOATVAL','cte',1,'p_cte','syntax_analyzer.py',521),
  ('EL -> TRUE','EL',1,'p_EL','syntax_analyzer.py',527),
  ('EL -> FALSE','EL',1,'p_EL','syntax_analyzer.py',528),
  ('EL -> OPENPAR O CLOSINGPAR','EL',3,'p_EL','syntax_analyzer.py',529),
  ('EL -> OPENPAR O CLOSINGPAR OL EL','EL',5,'p_EL','syntax_analyzer.py',530),
  ('OL -> AND','OL',1,'p_OL','syntax_analyzer.py',537),
  ('OL -> OR','OL',1,'p_OL','syntax_analyzer.py',538),
  ('OL -> NOT','OL',1,'p_OL','syntax_analyzer.py',539),
  ('O -> Ex GREATHER Ex','O',3,'p_O','syntax_analyzer.py',546),
  ('O -> Ex GREATHEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',547),
  ('O -> Ex SMALLER Ex','O',3,'p_O','syntax_analyzer.py',548),
  ('O -> Ex SMALLEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',549),
  ('O -> Ex NOTEQUAL Ex','O',3,'p_O','syntax_analyzer.py',550),
  ('O -> Ex EQUALTO Ex','O',3,'p_O','syntax_analyzer.py',551),
  ('O -> Ex error Ex','O',3,'p_O_error','syntax_analyzer.py',571),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',577),
]
