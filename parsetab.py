
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSINGBRACKET CLOSINGPAR COMA COMMENT DIM DIVIDE DO EIF ELSE END EQUALS EQUALTO FALSE FLOAT FLOATVAL FOR GOSUB GREATHER GREATHEREQUAL ID IF INPUT INT INTVAL LET MINUS MULTIPLY NEXT NOT NOTEQUAL OPENBRACKET OPENPAR OR PLUS PRINT PROGRAM REPEAT RETURN SMALLER SMALLEREQUAL SUBPROCEDURE THEN TO TRUE TWOPOINTS UNTIL WEND WHILE WORD WORDVAL\n  PROGRAMA : PROGRAM V M endProgram S END\n  \n  endProgram :\n  \n    V : DIM setType Idv AS T Arr\n      | empty\n  \n  Arr : OPENBRACKET arr_space CLOSINGBRACKET\n      | empty\n  \n  arr_space : EA COMA arr_space\n            | ID COMA arr_space\n            | EA\n            | ID\n  \n  T : INT\n    | FLOAT\n    | WORD\n  \n  S : SUBPROCEDURE ID fillSub TWOPOINTS M RETURN endProcedure S\n    | empty\n  \n  fillSub :\n  \n  endProcedure :\n  \n  M : F M\n    | empty\n  \n  F : E F\n    | empty\n  \n  E : LET setType Idv EQUALS Ex\n    | DIM setType Idv AS T Arr\n    | IF EL THEN first_conditional F Esf EIF final_conditional\n    | FOR ID EQUALS EA for_assignation TO Ex for_conditional DO for_save_conditional F NEXT ID for_conditional_end\n    | WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional\n    | REPEAT while_first_conditional F UNTIL EL repeat_conditional\n    | GOSUB ID\n    | INPUT IDEx\n    | PRINT Ex\n  \n  for_assignation :\n  \n  for_conditional :\n  \n  for_save_conditional :\n  \n  for_conditional_end :\n  \n  repeat_conditional :\n  \n  while_first_conditional :\n  \n  while_second_conditional :\n  \n  while_final_conditional :\n  \n  first_conditional :\n  \n  second_conditional :\n  \n  final_conditional :\n  \n  Esf : ELSE second_conditional F\n      | empty\n  \n  Idv : ID COMA Idv\n      | ID\n      | ID Arr\n  \n  setType :\n  \n  IDEx : ID\n       | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  Ex : EA\n     | EL\n     | ID\n  \n  ES : WORDVAL\n  \n  EA : EA PLUS P\n     | EA MINUS P\n     | P\n  \n  P : P MULTIPLY N\n    | P DIVIDE N\n    | N\n  \n  N : cte saveID\n    | ID saveID\n    | OPENPAR EA CLOSINGPAR\n    | ID Arr\n  \n  saveID :\n  \n  cte : FLOATVAL\n      | INTVAL\n      | MINUS INTVAL\n      | MINUS FLOATVAL\n  \n  EL : TRUE\n     | FALSE \n     | OPENPAR O CLOSINGPAR\n     | OPENPAR O CLOSINGPAR OL EL\n  \n  OL : AND\n     | OR\n     | NOT\n  \n  O : Ex GREATHER Ex\n    | Ex GREATHEREQUAL Ex\n    | Ex SMALLER Ex\n    | Ex SMALLEREQUAL Ex\n    | Ex NOTEQUAL Ex\n    | Ex EQUALTO Ex\n  \n  O : Ex error Ex\n  \n  empty :\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,76,],[0,-1,]),'DIM':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[4,11,-4,11,-21,11,-36,-20,-21,-69,-70,11,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,11,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,11,-35,-5,-3,11,-23,-40,-72,-27,-49,-41,11,-38,-24,-26,-33,11,-34,-25,]),'LET':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[-83,10,-4,10,-21,10,-36,-20,-21,-69,-70,10,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,10,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,10,-35,-5,-3,10,-23,-40,-72,-27,-49,-41,10,-38,-24,-26,-33,10,-34,-25,]),'IF':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[-83,12,-4,12,-21,12,-36,-20,-21,-69,-70,12,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,12,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,12,-35,-5,-3,12,-23,-40,-72,-27,-49,-41,12,-38,-24,-26,-33,12,-34,-25,]),'FOR':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[-83,13,-4,13,-21,13,-36,-20,-21,-69,-70,13,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,13,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,13,-35,-5,-3,13,-23,-40,-72,-27,-49,-41,13,-38,-24,-26,-33,13,-34,-25,]),'WHILE':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[-83,14,-4,14,-21,14,-36,-20,-21,-69,-70,14,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,14,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,14,-35,-5,-3,14,-23,-40,-72,-27,-49,-41,14,-38,-24,-26,-33,14,-34,-25,]),'REPEAT':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[-83,15,-4,15,-21,15,-36,-20,-21,-69,-70,15,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,15,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,15,-35,-5,-3,15,-23,-40,-72,-27,-49,-41,15,-38,-24,-26,-33,15,-34,-25,]),'GOSUB':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[-83,16,-4,16,-21,16,-36,-20,-21,-69,-70,16,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,16,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,16,-35,-5,-3,16,-23,-40,-72,-27,-49,-41,16,-38,-24,-26,-33,16,-34,-25,]),'INPUT':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[-83,17,-4,17,-21,17,-36,-20,-21,-69,-70,17,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,17,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,17,-35,-5,-3,17,-23,-40,-72,-27,-49,-41,17,-38,-24,-26,-33,17,-34,-25,]),'PRINT':([2,3,5,7,8,9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,92,95,96,100,101,102,103,104,105,106,109,110,125,126,128,131,132,133,135,137,140,141,145,146,148,150,153,155,157,160,161,],[-83,18,-4,18,-21,18,-36,-20,-21,-69,-70,18,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,18,-71,-64,-37,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,18,-35,-5,-3,18,-23,-40,-72,-27,-49,-41,18,-38,-24,-26,-33,18,-34,-25,]),'SUBPROCEDURE':([2,3,5,6,7,8,9,20,21,22,23,27,28,33,34,35,36,37,38,39,40,43,44,45,46,63,64,66,69,70,72,81,89,95,96,100,101,102,103,104,105,106,109,110,126,128,131,133,137,140,141,145,148,149,150,153,154,160,161,],[-83,-83,-4,-2,-83,-19,-83,50,-18,-20,-21,-69,-70,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-61,-63,-6,-67,-68,-60,-71,-64,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,-35,-5,-3,-23,-72,-27,-49,-41,-38,-17,-24,-26,50,-34,-25,]),'END':([2,3,5,6,7,8,9,20,21,22,23,27,28,33,34,35,36,37,38,39,40,43,44,45,46,49,51,63,64,66,69,70,72,81,89,95,96,100,101,102,103,104,105,106,109,110,126,128,131,133,137,140,141,145,148,149,150,153,154,156,160,161,],[-83,-83,-4,-2,-83,-19,-83,-83,-18,-20,-21,-69,-70,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,76,-15,-61,-63,-6,-67,-68,-60,-71,-64,-54,-55,-57,-58,-62,-83,-11,-12,-13,-22,-83,-35,-5,-3,-23,-72,-27,-49,-41,-38,-17,-24,-26,-83,-14,-34,-25,]),'ID':([4,10,11,13,16,17,18,19,24,25,29,42,50,57,60,61,62,65,67,68,74,78,82,83,84,85,86,87,88,91,94,129,130,138,159,],[-47,-47,-47,30,33,35,39,48,48,48,39,39,77,89,-47,89,89,99,89,89,48,39,39,39,39,39,39,39,39,89,48,99,99,39,160,]),'RETURN':([7,8,9,21,22,23,27,28,33,34,35,36,37,38,39,40,43,44,45,46,63,64,66,69,70,72,81,89,95,96,100,101,102,104,105,106,109,110,126,128,132,133,137,140,141,144,145,148,150,153,160,161,],[-83,-19,-83,-18,-20,-21,-69,-70,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-61,-63,-6,-67,-68,-60,-71,-64,-54,-55,-57,-58,-62,-11,-12,-13,-22,-83,-35,-5,-83,-23,-72,-27,-49,149,-41,-38,-24,-26,-34,-25,]),'UNTIL':([9,15,22,23,27,28,32,33,34,35,36,37,38,39,40,43,44,45,46,59,63,64,66,69,70,72,81,89,95,96,100,101,102,104,105,106,109,110,126,128,133,137,140,141,145,148,150,153,160,161,],[-83,-36,-20,-21,-69,-70,-83,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,93,-61,-63,-6,-67,-68,-60,-71,-64,-54,-55,-57,-58,-62,-11,-12,-13,-22,-83,-35,-5,-23,-72,-27,-49,-41,-38,-24,-26,-34,-25,]),'ELSE':([9,22,23,27,28,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,95,96,100,101,102,104,105,106,109,110,111,126,128,133,137,140,141,145,148,150,153,160,161,],[-83,-20,-21,-69,-70,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,-83,-71,-64,-54,-55,-57,-58,-62,-11,-12,-13,-22,-83,135,-35,-5,-23,-72,-27,-49,-41,-38,-24,-26,-34,-25,]),'EIF':([9,22,23,27,28,33,34,35,36,37,38,39,40,43,44,45,46,54,63,64,66,69,70,72,80,81,89,95,96,100,101,102,104,105,106,109,110,111,126,128,133,134,135,136,137,140,141,145,146,148,150,151,153,160,161,],[-83,-20,-21,-69,-70,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-39,-61,-63,-6,-67,-68,-60,-83,-71,-64,-54,-55,-57,-58,-62,-11,-12,-13,-22,-83,-83,-35,-5,-23,145,-40,-43,-72,-27,-49,-41,-83,-38,-24,-42,-26,-34,-25,]),'WEND':([9,22,23,27,28,33,34,35,36,37,38,39,40,43,44,45,46,63,64,66,69,70,72,81,89,92,95,96,100,101,102,104,105,106,109,110,125,126,128,133,137,139,140,141,145,148,150,153,160,161,],[-83,-20,-21,-69,-70,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-61,-63,-6,-67,-68,-60,-71,-64,-37,-54,-55,-57,-58,-62,-11,-12,-13,-22,-83,-83,-35,-5,-23,-72,148,-27,-49,-41,-38,-24,-26,-34,-25,]),'NEXT':([9,22,23,27,28,33,34,35,36,37,38,39,40,43,44,45,46,63,64,66,69,70,72,81,89,95,96,100,101,102,104,105,106,109,110,126,128,133,137,140,141,145,148,150,153,155,157,158,160,161,],[-83,-20,-21,-69,-70,-28,-29,-48,-30,-50,-51,-52,-56,-59,-64,-65,-66,-61,-63,-6,-67,-68,-60,-71,-64,-54,-55,-57,-58,-62,-11,-12,-13,-22,-83,-35,-5,-23,-72,-27,-49,-41,-38,-24,-26,-33,-83,159,-34,-25,]),'TRUE':([12,14,18,29,31,42,78,82,83,84,85,86,87,88,93,112,113,114,115,138,],[27,-36,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-73,-74,-75,27,]),'FALSE':([12,14,18,29,31,42,78,82,83,84,85,86,87,88,93,112,113,114,115,138,],[28,-36,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-73,-74,-75,28,]),'OPENPAR':([12,14,18,29,31,42,57,61,62,65,67,68,78,82,83,84,85,86,87,88,91,93,112,113,114,115,129,130,138,],[29,-36,42,42,29,42,91,91,91,91,91,91,42,42,42,42,42,42,42,42,91,29,29,-73,-74,-75,91,91,42,]),'FLOATVAL':([18,29,41,42,57,61,62,65,67,68,78,82,83,84,85,86,87,88,91,129,130,138,],[45,45,70,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'INTVAL':([18,29,41,42,57,61,62,65,67,68,78,82,83,84,85,86,87,88,91,129,130,138,],[46,46,69,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'MINUS':([18,29,37,39,40,42,43,44,45,46,57,61,62,63,64,65,66,67,68,69,70,71,72,78,82,83,84,85,86,87,88,89,90,91,95,96,98,99,100,101,102,124,128,129,130,138,],[41,41,62,-64,-56,41,-59,-64,-65,-66,41,41,41,-61,-63,41,-6,41,41,-67,-68,62,-60,41,41,41,41,41,41,41,41,-64,62,41,-54,-55,62,-64,-57,-58,-62,62,-5,41,41,41,]),'THEN':([26,27,28,81,137,],[54,-69,-70,-71,-72,]),'GREATHER':([27,28,37,38,39,40,43,44,45,46,56,63,64,66,69,70,71,72,81,89,95,96,100,101,102,128,137,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,82,-61,-63,-6,-67,-68,-50,-60,-71,-64,-54,-55,-57,-58,-62,-5,-72,]),'GREATHEREQUAL':([27,28,37,38,39,40,43,44,45,46,56,63,64,66,69,70,71,72,81,89,95,96,100,101,102,128,137,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,83,-61,-63,-6,-67,-68,-50,-60,-71,-64,-54,-55,-57,-58,-62,-5,-72,]),'SMALLER':([27,28,37,38,39,40,43,44,45,46,56,63,64,66,69,70,71,72,81,89,95,96,100,101,102,128,137,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,84,-61,-63,-6,-67,-68,-50,-60,-71,-64,-54,-55,-57,-58,-62,-5,-72,]),'SMALLEREQUAL':([27,28,37,38,39,40,43,44,45,46,56,63,64,66,69,70,71,72,81,89,95,96,100,101,102,128,137,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,85,-61,-63,-6,-67,-68,-50,-60,-71,-64,-54,-55,-57,-58,-62,-5,-72,]),'NOTEQUAL':([27,28,37,38,39,40,43,44,45,46,56,63,64,66,69,70,71,72,81,89,95,96,100,101,102,128,137,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,86,-61,-63,-6,-67,-68,-50,-60,-71,-64,-54,-55,-57,-58,-62,-5,-72,]),'EQUALTO':([27,28,37,38,39,40,43,44,45,46,56,63,64,66,69,70,71,72,81,89,95,96,100,101,102,128,137,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,87,-61,-63,-6,-67,-68,-50,-60,-71,-64,-54,-55,-57,-58,-62,-5,-72,]),'error':([27,28,37,38,39,40,43,44,45,46,56,63,64,66,69,70,71,72,81,89,95,96,100,101,102,128,137,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,88,-61,-63,-6,-67,-68,-50,-60,-71,-64,-54,-55,-57,-58,-62,-5,-72,]),'DO':([27,28,37,38,39,40,43,44,45,46,58,63,64,66,69,70,72,81,89,95,96,100,101,102,128,137,147,152,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,92,-61,-63,-6,-67,-68,-60,-71,-64,-54,-55,-57,-58,-62,-5,-72,-32,155,]),'CLOSINGPAR':([27,28,37,38,39,40,43,44,45,46,55,63,64,66,69,70,71,72,81,89,95,96,100,101,102,116,117,118,119,120,121,122,124,128,137,],[-69,-70,-50,-51,-52,-56,-59,-64,-65,-66,81,-61,-63,-6,-67,-68,102,-60,-71,-64,-54,-55,-57,-58,-62,-76,-77,-78,-79,-80,-81,-82,102,-5,-72,]),'EQUALS':([30,48,52,66,75,107,128,],[57,-45,78,-6,-46,-44,-5,]),'OPENBRACKET':([35,39,48,89,99,103,104,105,106,110,],[60,65,65,65,65,65,-11,-12,-13,65,]),'PLUS':([37,39,40,43,44,45,46,63,64,66,69,70,71,72,89,90,95,96,98,99,100,101,102,124,128,],[61,-64,-56,-59,-64,-65,-66,-61,-63,-6,-67,-68,61,-60,-64,61,-54,-55,61,-64,-57,-58,-62,61,-5,]),'MULTIPLY':([39,40,43,44,45,46,63,64,66,69,70,72,89,95,96,99,100,101,102,128,],[-64,67,-59,-64,-65,-66,-61,-63,-6,-67,-68,-60,-64,67,67,-64,-57,-58,-62,-5,]),'DIVIDE':([39,40,43,44,45,46,63,64,66,69,70,72,89,95,96,99,100,101,102,128,],[-64,68,-59,-64,-65,-66,-61,-63,-6,-67,-68,-60,-64,68,68,-64,-57,-58,-62,-5,]),'TO':([40,43,44,45,46,63,64,66,69,70,72,89,90,95,96,100,101,102,123,128,],[-56,-59,-64,-65,-66,-61,-63,-6,-67,-68,-60,-64,-31,-54,-55,-57,-58,-62,138,-5,]),'COMA':([40,43,44,45,46,48,63,64,66,69,70,72,89,95,96,98,99,100,101,102,128,],[-56,-59,-64,-65,-66,74,-61,-63,-6,-67,-68,-60,-64,-54,-55,129,130,-57,-58,-62,-5,]),'CLOSINGBRACKET':([40,43,44,45,46,48,63,64,66,69,70,72,75,89,95,96,97,98,99,100,101,102,107,127,128,142,143,],[-56,-59,-64,-65,-66,-45,-61,-63,-6,-67,-68,-60,-46,-64,-54,-55,128,-9,-10,-57,-58,-62,-44,141,-5,-7,-8,]),'AS':([47,48,53,66,75,107,128,],[73,-45,79,-6,-46,-44,-5,]),'INT':([73,79,],[104,104,]),'FLOAT':([73,79,],[105,105,]),'WORD':([73,79,],[106,106,]),'TWOPOINTS':([77,108,],[-16,132,]),'AND':([81,],[113,]),'OR':([81,],[114,]),'NOT':([81,],[115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'V':([2,],[3,]),'empty':([2,3,7,9,20,32,39,48,80,89,99,103,110,111,125,132,146,154,157,],[5,8,8,23,51,23,66,66,23,66,66,66,66,136,23,8,23,51,23,]),'M':([3,7,132,],[6,21,144,]),'F':([3,7,9,32,80,125,132,146,157,],[7,7,22,59,111,139,7,151,158,]),'E':([3,7,9,32,80,125,132,146,157,],[9,9,9,9,9,9,9,9,9,]),'setType':([4,10,11,60,],[19,24,25,94,]),'endProgram':([6,],[20,]),'EL':([12,18,29,31,42,78,82,83,84,85,86,87,88,93,112,138,],[26,38,38,58,38,38,38,38,38,38,38,38,38,126,137,38,]),'while_first_conditional':([14,15,],[31,32,]),'IDEx':([17,],[34,]),'Ex':([18,29,42,78,82,83,84,85,86,87,88,138,],[36,56,56,109,116,117,118,119,120,121,122,147,]),'EA':([18,29,42,57,65,78,82,83,84,85,86,87,88,91,129,130,138,],[37,37,71,90,98,37,37,37,37,37,37,37,37,124,98,98,37,]),'P':([18,29,42,57,61,62,65,78,82,83,84,85,86,87,88,91,129,130,138,],[40,40,40,40,95,96,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'N':([18,29,42,57,61,62,65,67,68,78,82,83,84,85,86,87,88,91,129,130,138,],[43,43,43,43,43,43,43,100,101,43,43,43,43,43,43,43,43,43,43,43,43,]),'cte':([18,29,42,57,61,62,65,67,68,78,82,83,84,85,86,87,88,91,129,130,138,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'Idv':([19,24,25,74,94,],[47,52,53,107,127,]),'S':([20,154,],[49,156,]),'O':([29,42,],[55,55,]),'saveID':([39,44,89,99,],[63,72,63,63,]),'Arr':([39,48,89,99,103,110,],[64,75,64,64,131,133,]),'first_conditional':([54,],[80,]),'arr_space':([65,129,130,],[97,142,143,]),'T':([73,79,],[103,110,]),'fillSub':([77,],[108,]),'OL':([81,],[112,]),'for_assignation':([90,],[123,]),'while_second_conditional':([92,],[125,]),'Esf':([111,],[134,]),'repeat_conditional':([126,],[140,]),'second_conditional':([135,],[146,]),'final_conditional':([145,],[150,]),'for_conditional':([147,],[152,]),'while_final_conditional':([148,],[153,]),'endProcedure':([149,],[154,]),'for_save_conditional':([155,],[157,]),'for_conditional_end':([160,],[161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM V M endProgram S END','PROGRAMA',6,'p_PROGRAMA','syntax_analyzer.py',365),
  ('endProgram -> <empty>','endProgram',0,'p_endProgram','syntax_analyzer.py',376),
  ('V -> DIM setType Idv AS T Arr','V',6,'p_V','syntax_analyzer.py',383),
  ('V -> empty','V',1,'p_V','syntax_analyzer.py',384),
  ('Arr -> OPENBRACKET arr_space CLOSINGBRACKET','Arr',3,'p_Arr','syntax_analyzer.py',397),
  ('Arr -> empty','Arr',1,'p_Arr','syntax_analyzer.py',398),
  ('arr_space -> EA COMA arr_space','arr_space',3,'p_arr_space','syntax_analyzer.py',406),
  ('arr_space -> ID COMA arr_space','arr_space',3,'p_arr_space','syntax_analyzer.py',407),
  ('arr_space -> EA','arr_space',1,'p_arr_space','syntax_analyzer.py',408),
  ('arr_space -> ID','arr_space',1,'p_arr_space','syntax_analyzer.py',409),
  ('T -> INT','T',1,'p_T','syntax_analyzer.py',418),
  ('T -> FLOAT','T',1,'p_T','syntax_analyzer.py',419),
  ('T -> WORD','T',1,'p_T','syntax_analyzer.py',420),
  ('S -> SUBPROCEDURE ID fillSub TWOPOINTS M RETURN endProcedure S','S',8,'p_S','syntax_analyzer.py',426),
  ('S -> empty','S',1,'p_S','syntax_analyzer.py',427),
  ('fillSub -> <empty>','fillSub',0,'p_fillSub','syntax_analyzer.py',437),
  ('endProcedure -> <empty>','endProcedure',0,'p_endProcedure','syntax_analyzer.py',444),
  ('M -> F M','M',2,'p_M','syntax_analyzer.py',453),
  ('M -> empty','M',1,'p_M','syntax_analyzer.py',454),
  ('F -> E F','F',2,'p_F','syntax_analyzer.py',459),
  ('F -> empty','F',1,'p_F','syntax_analyzer.py',460),
  ('E -> LET setType Idv EQUALS Ex','E',5,'p_E','syntax_analyzer.py',465),
  ('E -> DIM setType Idv AS T Arr','E',6,'p_E','syntax_analyzer.py',466),
  ('E -> IF EL THEN first_conditional F Esf EIF final_conditional','E',8,'p_E','syntax_analyzer.py',467),
  ('E -> FOR ID EQUALS EA for_assignation TO Ex for_conditional DO for_save_conditional F NEXT ID for_conditional_end','E',14,'p_E','syntax_analyzer.py',468),
  ('E -> WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional','E',8,'p_E','syntax_analyzer.py',469),
  ('E -> REPEAT while_first_conditional F UNTIL EL repeat_conditional','E',6,'p_E','syntax_analyzer.py',470),
  ('E -> GOSUB ID','E',2,'p_E','syntax_analyzer.py',471),
  ('E -> INPUT IDEx','E',2,'p_E','syntax_analyzer.py',472),
  ('E -> PRINT Ex','E',2,'p_E','syntax_analyzer.py',473),
  ('for_assignation -> <empty>','for_assignation',0,'p_for_assignation','syntax_analyzer.py',501),
  ('for_conditional -> <empty>','for_conditional',0,'p_for_conditional','syntax_analyzer.py',510),
  ('for_save_conditional -> <empty>','for_save_conditional',0,'p_for_save_conditional','syntax_analyzer.py',521),
  ('for_conditional_end -> <empty>','for_conditional_end',0,'p_for_conditional_end','syntax_analyzer.py',533),
  ('repeat_conditional -> <empty>','repeat_conditional',0,'p_repeat_conditional','syntax_analyzer.py',548),
  ('while_first_conditional -> <empty>','while_first_conditional',0,'p_while_first_conditional','syntax_analyzer.py',558),
  ('while_second_conditional -> <empty>','while_second_conditional',0,'p_while_second_conditional','syntax_analyzer.py',567),
  ('while_final_conditional -> <empty>','while_final_conditional',0,'p_while_final_conditional','syntax_analyzer.py',579),
  ('first_conditional -> <empty>','first_conditional',0,'p_first_conditional','syntax_analyzer.py',592),
  ('second_conditional -> <empty>','second_conditional',0,'p_second_conditional','syntax_analyzer.py',603),
  ('final_conditional -> <empty>','final_conditional',0,'p_final_conditional','syntax_analyzer.py',615),
  ('Esf -> ELSE second_conditional F','Esf',3,'p_Esf','syntax_analyzer.py',623),
  ('Esf -> empty','Esf',1,'p_Esf','syntax_analyzer.py',624),
  ('Idv -> ID COMA Idv','Idv',3,'p_Idv','syntax_analyzer.py',629),
  ('Idv -> ID','Idv',1,'p_Idv','syntax_analyzer.py',630),
  ('Idv -> ID Arr','Idv',2,'p_Idv','syntax_analyzer.py',631),
  ('setType -> <empty>','setType',0,'p_setType','syntax_analyzer.py',649),
  ('IDEx -> ID','IDEx',1,'p_IDEx','syntax_analyzer.py',656),
  ('IDEx -> ID OPENBRACKET setType Idv CLOSINGBRACKET','IDEx',5,'p_IDEx','syntax_analyzer.py',657),
  ('Ex -> EA','Ex',1,'p_Ex','syntax_analyzer.py',663),
  ('Ex -> EL','Ex',1,'p_Ex','syntax_analyzer.py',664),
  ('Ex -> ID','Ex',1,'p_Ex','syntax_analyzer.py',665),
  ('ES -> WORDVAL','ES',1,'p_ES','syntax_analyzer.py',671),
  ('EA -> EA PLUS P','EA',3,'p_EA','syntax_analyzer.py',676),
  ('EA -> EA MINUS P','EA',3,'p_EA','syntax_analyzer.py',677),
  ('EA -> P','EA',1,'p_EA','syntax_analyzer.py',678),
  ('P -> P MULTIPLY N','P',3,'p_P','syntax_analyzer.py',701),
  ('P -> P DIVIDE N','P',3,'p_P','syntax_analyzer.py',702),
  ('P -> N','P',1,'p_P','syntax_analyzer.py',703),
  ('N -> cte saveID','N',2,'p_N','syntax_analyzer.py',727),
  ('N -> ID saveID','N',2,'p_N','syntax_analyzer.py',728),
  ('N -> OPENPAR EA CLOSINGPAR','N',3,'p_N','syntax_analyzer.py',729),
  ('N -> ID Arr','N',2,'p_N','syntax_analyzer.py',730),
  ('saveID -> <empty>','saveID',0,'p_saveID','syntax_analyzer.py',741),
  ('cte -> FLOATVAL','cte',1,'p_cte','syntax_analyzer.py',761),
  ('cte -> INTVAL','cte',1,'p_cte','syntax_analyzer.py',762),
  ('cte -> MINUS INTVAL','cte',2,'p_cte','syntax_analyzer.py',763),
  ('cte -> MINUS FLOATVAL','cte',2,'p_cte','syntax_analyzer.py',764),
  ('EL -> TRUE','EL',1,'p_EL','syntax_analyzer.py',776),
  ('EL -> FALSE','EL',1,'p_EL','syntax_analyzer.py',777),
  ('EL -> OPENPAR O CLOSINGPAR','EL',3,'p_EL','syntax_analyzer.py',778),
  ('EL -> OPENPAR O CLOSINGPAR OL EL','EL',5,'p_EL','syntax_analyzer.py',779),
  ('OL -> AND','OL',1,'p_OL','syntax_analyzer.py',797),
  ('OL -> OR','OL',1,'p_OL','syntax_analyzer.py',798),
  ('OL -> NOT','OL',1,'p_OL','syntax_analyzer.py',799),
  ('O -> Ex GREATHER Ex','O',3,'p_O','syntax_analyzer.py',807),
  ('O -> Ex GREATHEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',808),
  ('O -> Ex SMALLER Ex','O',3,'p_O','syntax_analyzer.py',809),
  ('O -> Ex SMALLEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',810),
  ('O -> Ex NOTEQUAL Ex','O',3,'p_O','syntax_analyzer.py',811),
  ('O -> Ex EQUALTO Ex','O',3,'p_O','syntax_analyzer.py',812),
  ('O -> Ex error Ex','O',3,'p_O_error','syntax_analyzer.py',839),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',845),
]
