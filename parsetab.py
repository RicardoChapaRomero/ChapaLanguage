
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSINGBRACKET CLOSINGPAR COMA COMMENT DIM DIVIDE EIF ELSE END EQUALS EQUALTO FALSE FLOAT FLOATVAL FOR GOSUB GREATHER GREATHEREQUAL ID IF INPUT INT INTVAL LET MINUS MULTIPLY NEXT NOT NOTEQUAL OPENBRACKET OPENPAR OR PLUS PRINT PROGRAM RETURN SMALLER SMALLEREQUAL SUBPROCEDURE THEN TO TRUE TWOPOINTS WEND WHILE WORD WORDVAL\n  PROGRAMA : PROGRAM V M S END\n  \n    V : DIM setType Idv AS T Arr\n      | empty\n  \n  Arr : OPENBRACKET EA CLOSINGBRACKET Arr\n      | OPENBRACKET ID CLOSINGBRACKET Arr\n      | empty\n  \n  T : INT\n    | FLOAT\n    | WORD\n  \n  S : SUBPROCEDURE ID TWOPOINTS M RETURN S\n    | empty\n  \n  M : F M\n    | empty\n  \n  F : E F\n    | empty\n  \n  E : LET setType Idv EQUALS Ex\n    | DIM setType Idv AS T Arr\n    | IF EL THEN F Esf EIF\n    | FOR ID EQUALS EA TO Ex F NEXT ID\n    | WHILE OPENPAR EL CLOSINGPAR F WEND\n    | GOSUB ID\n    | INPUT ES COMA IDEx\n    | PRINT Ex\n  \n  Idv : ID COMA Idv\n      | ID\n  \n  setType :\n  \n  Esf : ELSE F\n      | empty\n  \n  IDEx : ID\n       | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  Ex : EA\n     | ES\n     | EL\n     | ID\n  \n  ES : WORDVAL\n  \n  EA : P PLUS EA\n     | P MINUS EA\n     | P\n  \n  P : N MULTIPLY P\n    | N DIVIDE P\n    | N\n  \n  N : cte saveID\n    | ID saveID\n    | OPENPAR EA CLOSINGPAR\n    | ID OPENBRACKET INTVAL CLOSINGBRACKET\n    | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  saveOperator :\n  \n  saveID :\n  \n  solveOperation :\n  \n  cte : INTVAL\n      | FLOATVAL\n  \n  EL : TRUE \n     | FALSE \n     | OPENPAR O CLOSINGPAR Olt\n  \n  Olt : OL OPENPAR O CLOSINGPAR Olt\n      | empty\n  \n  OL : AND\n     | OR\n     | NOT\n  \n  O : WORD EQUALTO WORD\n    | EA OPR EA\n    | ID OPR ID\n    | ID OPR EA\n    | EA OPR ID\n  \n  OPR : EQUALTO\n      | GREATHER\n      | GREATHEREQUAL\n      | SMALLER\n      | SMALLEREQUAL\n      | NOTEQUAL\n  \n  empty :\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,49,],[0,-1,]),'DIM':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,72,77,78,89,90,91,94,95,96,97,98,99,100,101,102,105,106,108,110,112,124,126,128,130,131,134,135,137,144,145,146,148,149,150,151,152,],[4,11,-3,11,-15,11,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,11,-43,-42,11,-48,-71,11,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,11,-54,-56,-45,-2,-6,-17,-18,11,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'LET':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,72,77,78,89,90,91,94,95,96,97,98,99,100,101,102,105,106,108,110,112,124,126,128,130,131,134,135,137,144,145,146,148,149,150,151,152,],[-71,10,-3,10,-15,10,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,10,-43,-42,10,-48,-71,10,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,10,-54,-56,-45,-2,-6,-17,-18,10,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'IF':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,72,77,78,89,90,91,94,95,96,97,98,99,100,101,102,105,106,108,110,112,124,126,128,130,131,134,135,137,144,145,146,148,149,150,151,152,],[-71,12,-3,12,-15,12,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,12,-43,-42,12,-48,-71,12,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,12,-54,-56,-45,-2,-6,-17,-18,12,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'FOR':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,72,77,78,89,90,91,94,95,96,97,98,99,100,101,102,105,106,108,110,112,124,126,128,130,131,134,135,137,144,145,146,148,149,150,151,152,],[-71,13,-3,13,-15,13,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,13,-43,-42,13,-48,-71,13,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,13,-54,-56,-45,-2,-6,-17,-18,13,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'WHILE':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,72,77,78,89,90,91,94,95,96,97,98,99,100,101,102,105,106,108,110,112,124,126,128,130,131,134,135,137,144,145,146,148,149,150,151,152,],[-71,14,-3,14,-15,14,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,14,-43,-42,14,-48,-71,14,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,14,-54,-56,-45,-2,-6,-17,-18,14,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'GOSUB':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,72,77,78,89,90,91,94,95,96,97,98,99,100,101,102,105,106,108,110,112,124,126,128,130,131,134,135,137,144,145,146,148,149,150,151,152,],[-71,15,-3,15,-15,15,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,15,-43,-42,15,-48,-71,15,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,15,-54,-56,-45,-2,-6,-17,-18,15,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'INPUT':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,72,77,78,89,90,91,94,95,96,97,98,99,100,101,102,105,106,108,110,112,124,126,128,130,131,134,135,137,144,145,146,148,149,150,151,152,],[-71,16,-3,16,-15,16,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,16,-43,-42,16,-48,-71,16,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,16,-54,-56,-45,-2,-6,-17,-18,16,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'PRINT':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,72,77,78,89,90,91,94,95,96,97,98,99,100,101,102,105,106,108,110,112,124,126,128,130,131,134,135,137,144,145,146,148,149,150,151,152,],[-71,17,-3,17,-15,17,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,17,-43,-42,17,-48,-71,17,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,17,-54,-56,-45,-2,-6,-17,-18,17,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'SUBPROCEDURE':([2,3,5,6,7,8,9,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,62,69,77,78,90,91,94,95,96,97,98,99,100,101,102,105,106,110,112,124,126,128,129,130,131,135,137,144,145,146,148,149,150,151,152,],[-71,-71,-3,20,-71,-13,-71,-12,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,-43,-42,-48,-71,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,-54,-56,-45,-2,-6,20,-17,-18,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'END':([2,3,5,6,7,8,9,19,21,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,62,69,77,78,90,91,94,95,96,97,98,99,100,101,102,105,106,110,112,124,126,128,129,130,131,135,137,140,144,145,146,148,149,150,151,152,],[-71,-71,-3,-71,-71,-13,-71,49,-11,-12,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,-43,-42,-48,-71,-22,-29,-36,-37,-44,-39,-40,-71,-7,-8,-9,-16,-71,-54,-56,-45,-2,-6,-71,-17,-18,-20,-46,-10,-71,-71,-71,-30,-4,-5,-55,-19,]),'ID':([4,10,11,13,15,17,18,20,25,26,30,42,54,59,61,63,64,65,67,68,71,73,80,81,82,83,84,85,86,87,93,121,123,127,133,136,147,],[-26,-26,-26,31,33,40,48,50,48,48,58,58,77,77,91,-26,77,77,77,77,48,40,118,-65,-66,-67,-68,-69,-70,119,48,40,-26,139,58,48,152,]),'RETURN':([7,8,9,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,62,69,72,77,78,90,91,94,95,96,97,98,100,101,102,104,105,106,110,112,124,128,130,131,135,137,144,145,146,148,149,150,151,152,],[-71,-13,-71,-12,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,-43,-42,-71,-48,-71,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,129,-16,-71,-54,-56,-45,-6,-17,-18,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'ELSE':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,75,77,78,90,91,94,95,96,97,98,100,101,102,105,106,110,112,124,128,130,131,135,137,144,145,146,148,149,150,151,152,],[-71,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,-71,-43,-42,108,-48,-71,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,-16,-71,-54,-56,-45,-6,-17,-18,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'EIF':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,62,69,75,77,78,90,91,94,95,96,97,98,100,101,102,105,106,107,108,109,110,112,124,128,130,131,132,135,137,144,145,146,148,149,150,151,152,],[-71,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,-71,-43,-42,-71,-48,-71,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,-16,-71,131,-71,-28,-54,-56,-45,-6,-17,-18,-27,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'WEND':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,62,69,77,78,89,90,91,94,95,96,97,98,100,101,102,105,106,110,112,122,124,128,130,131,135,137,144,145,146,148,149,150,151,152,],[-71,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,-43,-42,-48,-71,-71,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,-16,-71,-54,-56,135,-45,-6,-17,-18,-20,-46,-71,-71,-71,-30,-4,-5,-55,-19,]),'NEXT':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,62,69,77,78,90,91,94,95,96,97,98,100,101,102,105,106,110,112,124,128,130,131,134,135,137,142,144,145,146,148,149,150,151,152,],[-71,-14,-15,-52,-53,-21,-35,-23,-31,-32,-33,-34,-38,-41,-48,-50,-51,-43,-42,-48,-71,-22,-29,-36,-37,-44,-39,-40,-7,-8,-9,-16,-71,-54,-56,-45,-6,-17,-18,-71,-20,-46,147,-71,-71,-71,-30,-4,-5,-55,-19,]),'TRUE':([12,17,32,73,121,],[28,28,28,28,28,]),'FALSE':([12,17,32,73,121,],[29,29,29,29,29,]),'OPENPAR':([12,14,17,30,32,42,54,59,64,65,67,68,73,80,81,82,83,84,85,86,87,111,113,114,115,121,127,133,],[30,32,42,54,30,54,54,54,54,54,54,54,42,54,-65,-66,-67,-68,-69,-70,54,133,-57,-58,-59,42,54,54,]),'WORDVAL':([16,17,73,121,],[35,35,35,35,]),'INTVAL':([17,30,42,54,59,63,64,65,67,68,73,80,81,82,83,84,85,86,87,121,127,133,],[45,45,45,45,45,92,45,45,45,45,45,45,-65,-66,-67,-68,-69,-70,45,45,45,45,]),'FLOATVAL':([17,30,42,54,59,64,65,67,68,73,80,81,82,83,84,85,86,87,121,127,133,],[46,46,46,46,46,46,46,46,46,46,46,-65,-66,-67,-68,-69,-70,46,46,46,46,]),'THEN':([27,28,29,78,110,112,146,151,],[53,-52,-53,-71,-54,-56,-71,-55,]),'CLOSINGPAR':([28,29,41,43,44,45,46,55,58,60,62,66,69,76,77,78,94,95,96,97,98,110,112,116,117,118,119,120,124,137,141,146,151,],[-52,-53,-38,-41,-48,-50,-51,78,-48,89,-43,96,-42,96,-48,-71,-36,-37,-44,-39,-40,-54,-56,-60,-61,-48,-48,-63,-45,-46,146,-71,-55,]),'WORD':([30,42,70,74,79,133,],[56,56,102,102,116,56,]),'EQUALS':([31,48,51,103,],[59,-25,73,-24,]),'COMA':([34,35,48,],[61,-35,71,]),'OPENBRACKET':([40,58,77,91,99,100,101,102,106,118,119,139,144,145,],[63,63,63,123,127,-7,-8,-9,127,63,63,63,127,127,]),'MULTIPLY':([40,43,44,45,46,58,62,69,77,96,118,119,124,137,139,],[-48,67,-48,-50,-51,-48,-43,-42,-48,-44,-48,-48,-45,-46,-48,]),'DIVIDE':([40,43,44,45,46,58,62,69,77,96,118,119,124,137,139,],[-48,68,-48,-50,-51,-48,-43,-42,-48,-44,-48,-48,-45,-46,-48,]),'PLUS':([40,41,43,44,45,46,58,62,69,77,96,97,98,118,119,124,137,139,],[-48,64,-41,-48,-50,-51,-48,-43,-42,-48,-44,-39,-40,-48,-48,-45,-46,-48,]),'MINUS':([40,41,43,44,45,46,58,62,69,77,96,97,98,118,119,124,137,139,],[-48,65,-41,-48,-50,-51,-48,-43,-42,-48,-44,-39,-40,-48,-48,-45,-46,-48,]),'EQUALTO':([41,43,44,45,46,56,57,58,62,66,69,77,94,95,96,97,98,124,137,],[-38,-41,-48,-50,-51,79,81,81,-43,81,-42,-48,-36,-37,-44,-39,-40,-45,-46,]),'GREATHER':([41,43,44,45,46,57,58,62,66,69,77,94,95,96,97,98,124,137,],[-38,-41,-48,-50,-51,82,82,-43,82,-42,-48,-36,-37,-44,-39,-40,-45,-46,]),'GREATHEREQUAL':([41,43,44,45,46,57,58,62,66,69,77,94,95,96,97,98,124,137,],[-38,-41,-48,-50,-51,83,83,-43,83,-42,-48,-36,-37,-44,-39,-40,-45,-46,]),'SMALLER':([41,43,44,45,46,57,58,62,66,69,77,94,95,96,97,98,124,137,],[-38,-41,-48,-50,-51,84,84,-43,84,-42,-48,-36,-37,-44,-39,-40,-45,-46,]),'SMALLEREQUAL':([41,43,44,45,46,57,58,62,66,69,77,94,95,96,97,98,124,137,],[-38,-41,-48,-50,-51,85,85,-43,85,-42,-48,-36,-37,-44,-39,-40,-45,-46,]),'NOTEQUAL':([41,43,44,45,46,57,58,62,66,69,77,94,95,96,97,98,124,137,],[-38,-41,-48,-50,-51,86,86,-43,86,-42,-48,-36,-37,-44,-39,-40,-45,-46,]),'TO':([41,43,44,45,46,62,69,77,88,94,95,96,97,98,124,137,],[-38,-41,-48,-50,-51,-43,-42,-48,121,-36,-37,-44,-39,-40,-45,-46,]),'CLOSINGBRACKET':([41,43,44,45,46,48,62,69,77,92,94,95,96,97,98,103,124,125,137,138,139,143,],[-38,-41,-48,-50,-51,-25,-43,-42,-48,124,-36,-37,-44,-39,-40,-24,-45,137,-46,144,145,148,]),'AS':([47,48,52,103,],[70,-25,74,-24,]),'TWOPOINTS':([50,],[72,]),'INT':([70,74,],[100,100,]),'FLOAT':([70,74,],[101,101,]),'AND':([78,146,],[113,113,]),'OR':([78,146,],[114,114,]),'NOT':([78,146,],[115,115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'V':([2,],[3,]),'empty':([2,3,6,7,9,53,72,75,78,89,99,106,108,129,134,144,145,146,],[5,8,21,8,24,24,8,109,112,24,128,128,24,21,24,128,128,112,]),'M':([3,7,72,],[6,22,104,]),'F':([3,7,9,53,72,89,108,134,],[7,7,23,75,7,122,132,142,]),'E':([3,7,9,53,72,89,108,134,],[9,9,9,9,9,9,9,9,]),'setType':([4,10,11,63,123,],[18,25,26,93,136,]),'S':([6,129,],[19,140,]),'EL':([12,17,32,73,121,],[27,39,60,39,39,]),'ES':([16,17,73,121,],[34,38,38,38,]),'Ex':([17,73,121,],[36,105,134,]),'EA':([17,30,42,54,59,64,65,73,80,87,121,127,133,],[37,57,66,76,88,94,95,37,117,120,37,138,57,]),'P':([17,30,42,54,59,64,65,67,68,73,80,87,121,127,133,],[41,41,41,41,41,41,41,97,98,41,41,41,41,41,41,]),'N':([17,30,42,54,59,64,65,67,68,73,80,87,121,127,133,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'cte':([17,30,42,54,59,64,65,67,68,73,80,87,121,127,133,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'Idv':([18,25,26,71,93,136,],[47,51,52,103,125,143,]),'O':([30,42,133,],[55,55,141,]),'saveID':([40,44,58,77,118,119,139,],[62,69,62,62,62,62,62,]),'OPR':([57,58,66,],[80,87,80,]),'IDEx':([61,],[90,]),'T':([70,74,],[99,106,]),'Esf':([75,],[107,]),'Olt':([78,146,],[110,151,]),'OL':([78,146,],[111,111,]),'Arr':([99,106,144,145,],[126,130,149,150,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM V M S END','PROGRAMA',5,'p_PROGRAMA','syntax_analyzer.py',332),
  ('V -> DIM setType Idv AS T Arr','V',6,'p_V','syntax_analyzer.py',337),
  ('V -> empty','V',1,'p_V','syntax_analyzer.py',338),
  ('Arr -> OPENBRACKET EA CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',347),
  ('Arr -> OPENBRACKET ID CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',348),
  ('Arr -> empty','Arr',1,'p_Arr','syntax_analyzer.py',349),
  ('T -> INT','T',1,'p_T','syntax_analyzer.py',354),
  ('T -> FLOAT','T',1,'p_T','syntax_analyzer.py',355),
  ('T -> WORD','T',1,'p_T','syntax_analyzer.py',356),
  ('S -> SUBPROCEDURE ID TWOPOINTS M RETURN S','S',6,'p_S','syntax_analyzer.py',362),
  ('S -> empty','S',1,'p_S','syntax_analyzer.py',363),
  ('M -> F M','M',2,'p_M','syntax_analyzer.py',368),
  ('M -> empty','M',1,'p_M','syntax_analyzer.py',369),
  ('F -> E F','F',2,'p_F','syntax_analyzer.py',374),
  ('F -> empty','F',1,'p_F','syntax_analyzer.py',375),
  ('E -> LET setType Idv EQUALS Ex','E',5,'p_E','syntax_analyzer.py',380),
  ('E -> DIM setType Idv AS T Arr','E',6,'p_E','syntax_analyzer.py',381),
  ('E -> IF EL THEN F Esf EIF','E',6,'p_E','syntax_analyzer.py',382),
  ('E -> FOR ID EQUALS EA TO Ex F NEXT ID','E',9,'p_E','syntax_analyzer.py',383),
  ('E -> WHILE OPENPAR EL CLOSINGPAR F WEND','E',6,'p_E','syntax_analyzer.py',384),
  ('E -> GOSUB ID','E',2,'p_E','syntax_analyzer.py',385),
  ('E -> INPUT ES COMA IDEx','E',4,'p_E','syntax_analyzer.py',386),
  ('E -> PRINT Ex','E',2,'p_E','syntax_analyzer.py',387),
  ('Idv -> ID COMA Idv','Idv',3,'p_Idv','syntax_analyzer.py',396),
  ('Idv -> ID','Idv',1,'p_Idv','syntax_analyzer.py',397),
  ('setType -> <empty>','setType',0,'p_setType','syntax_analyzer.py',406),
  ('Esf -> ELSE F','Esf',2,'p_Esf','syntax_analyzer.py',413),
  ('Esf -> empty','Esf',1,'p_Esf','syntax_analyzer.py',414),
  ('IDEx -> ID','IDEx',1,'p_IDEx','syntax_analyzer.py',419),
  ('IDEx -> ID OPENBRACKET setType Idv CLOSINGBRACKET','IDEx',5,'p_IDEx','syntax_analyzer.py',420),
  ('Ex -> EA','Ex',1,'p_Ex','syntax_analyzer.py',425),
  ('Ex -> ES','Ex',1,'p_Ex','syntax_analyzer.py',426),
  ('Ex -> EL','Ex',1,'p_Ex','syntax_analyzer.py',427),
  ('Ex -> ID','Ex',1,'p_Ex','syntax_analyzer.py',428),
  ('ES -> WORDVAL','ES',1,'p_ES','syntax_analyzer.py',433),
  ('EA -> P PLUS EA','EA',3,'p_EA','syntax_analyzer.py',438),
  ('EA -> P MINUS EA','EA',3,'p_EA','syntax_analyzer.py',439),
  ('EA -> P','EA',1,'p_EA','syntax_analyzer.py',440),
  ('P -> N MULTIPLY P','P',3,'p_P','syntax_analyzer.py',448),
  ('P -> N DIVIDE P','P',3,'p_P','syntax_analyzer.py',449),
  ('P -> N','P',1,'p_P','syntax_analyzer.py',450),
  ('N -> cte saveID','N',2,'p_N','syntax_analyzer.py',466),
  ('N -> ID saveID','N',2,'p_N','syntax_analyzer.py',467),
  ('N -> OPENPAR EA CLOSINGPAR','N',3,'p_N','syntax_analyzer.py',468),
  ('N -> ID OPENBRACKET INTVAL CLOSINGBRACKET','N',4,'p_N','syntax_analyzer.py',469),
  ('N -> ID OPENBRACKET setType Idv CLOSINGBRACKET','N',5,'p_N','syntax_analyzer.py',470),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','syntax_analyzer.py',478),
  ('saveID -> <empty>','saveID',0,'p_saveID','syntax_analyzer.py',485),
  ('solveOperation -> <empty>','solveOperation',0,'p_solveOperation','syntax_analyzer.py',493),
  ('cte -> INTVAL','cte',1,'p_cte','syntax_analyzer.py',508),
  ('cte -> FLOATVAL','cte',1,'p_cte','syntax_analyzer.py',509),
  ('EL -> TRUE','EL',1,'p_EL','syntax_analyzer.py',515),
  ('EL -> FALSE','EL',1,'p_EL','syntax_analyzer.py',516),
  ('EL -> OPENPAR O CLOSINGPAR Olt','EL',4,'p_EL','syntax_analyzer.py',517),
  ('Olt -> OL OPENPAR O CLOSINGPAR Olt','Olt',5,'p_Olt','syntax_analyzer.py',522),
  ('Olt -> empty','Olt',1,'p_Olt','syntax_analyzer.py',523),
  ('OL -> AND','OL',1,'p_OL','syntax_analyzer.py',528),
  ('OL -> OR','OL',1,'p_OL','syntax_analyzer.py',529),
  ('OL -> NOT','OL',1,'p_OL','syntax_analyzer.py',530),
  ('O -> WORD EQUALTO WORD','O',3,'p_O','syntax_analyzer.py',535),
  ('O -> EA OPR EA','O',3,'p_O','syntax_analyzer.py',536),
  ('O -> ID OPR ID','O',3,'p_O','syntax_analyzer.py',537),
  ('O -> ID OPR EA','O',3,'p_O','syntax_analyzer.py',538),
  ('O -> EA OPR ID','O',3,'p_O','syntax_analyzer.py',539),
  ('OPR -> EQUALTO','OPR',1,'p_OPR','syntax_analyzer.py',544),
  ('OPR -> GREATHER','OPR',1,'p_OPR','syntax_analyzer.py',545),
  ('OPR -> GREATHEREQUAL','OPR',1,'p_OPR','syntax_analyzer.py',546),
  ('OPR -> SMALLER','OPR',1,'p_OPR','syntax_analyzer.py',547),
  ('OPR -> SMALLEREQUAL','OPR',1,'p_OPR','syntax_analyzer.py',548),
  ('OPR -> NOTEQUAL','OPR',1,'p_OPR','syntax_analyzer.py',549),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',554),
]
