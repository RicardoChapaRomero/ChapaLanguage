
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSINGBRACKET CLOSINGPAR COMA COMMENT DIM DIVIDE DO EIF ELSE END EQUALS EQUALTO FALSE FLOAT FLOATVAL FOR GOSUB GREATHER GREATHEREQUAL ID IF INPUT INT INTVAL LET MINUS MULTIPLY NEXT NOT NOTEQUAL OPENBRACKET OPENPAR OR PLUS PRINT PROGRAM REPEAT RETURN SMALLER SMALLEREQUAL SUBPROCEDURE THEN TO TRUE TWOPOINTS UNTIL WEND WHILE WORD WORDVAL\n  PROGRAMA : PROGRAM V M S END\n  \n    V : DIM setType Idv AS T Arr\n      | empty\n  \n  Arr : OPENBRACKET EA CLOSINGBRACKET Arr\n      | OPENBRACKET ID CLOSINGBRACKET Arr\n      | empty\n  \n  T : INT\n    | FLOAT\n    | WORD\n  \n  S : SUBPROCEDURE ID TWOPOINTS M RETURN S\n    | empty\n  \n  M : F M\n    | empty\n  \n  F : E F\n    | empty\n  \n  E : LET setType Idv EQUALS Ex\n    | DIM setType Idv AS T Arr\n    | IF EL THEN first_conditional F Esf EIF final_conditional\n    | FOR ID EQUALS EA for_assignation TO Ex for_conditional DO for_save_conditional F NEXT ID for_conditional_end\n    | WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional\n    | REPEAT while_first_conditional F UNTIL EL repeat_conditional\n    | GOSUB ID\n    | INPUT ES COMA IDEx\n    | PRINT Ex\n  \n  for_assignation :\n  \n  for_conditional :\n  \n  for_save_conditional :\n  \n  for_conditional_end :\n  \n  repeat_conditional :\n  \n  while_first_conditional :\n  \n  while_second_conditional :\n  \n  while_final_conditional :\n  \n  first_conditional :\n  \n  second_conditional :\n  \n  final_conditional :\n  \n  Esf : ELSE second_conditional F\n      | empty\n  \n  Idv : ID COMA Idv\n      | ID\n  \n  setType :\n  \n  IDEx : ID\n       | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  Ex : EA\n     | ES\n     | EL\n     | ID\n  \n  ES : WORDVAL\n  \n  EA : EA PLUS P\n     | EA MINUS P\n     | P\n  \n  P : P MULTIPLY N\n    | P DIVIDE N\n    | N\n  \n  N : cte saveID\n    | ID saveID\n    | OPENPAR EA CLOSINGPAR\n    | ID OPENBRACKET INTVAL CLOSINGBRACKET\n    | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  saveID :\n  \n  cte : INTVAL\n      | FLOATVAL\n  \n  EL : TRUE\n     | FALSE \n     | OPENPAR O CLOSINGPAR\n     | OPENPAR O CLOSINGPAR OL EL\n  \n  OL : AND\n     | OR\n     | NOT\n  \n  O : Ex GREATHER Ex\n    | Ex GREATHEREQUAL Ex\n    | Ex SMALLER Ex\n    | Ex SMALLEREQUAL Ex\n    | Ex NOTEQUAL Ex\n    | Ex EQUALTO Ex\n  \n  O : Ex error Ex\n  \n  empty :\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,51,],[0,-1,]),'DIM':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[4,11,-3,11,-15,11,-30,-14,-15,-62,-63,11,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,11,11,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,11,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,11,-32,-76,-76,-18,-20,-42,-4,-5,-27,11,-28,-19,]),'LET':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[-76,10,-3,10,-15,10,-30,-14,-15,-62,-63,10,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,10,10,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,10,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,10,-32,-76,-76,-18,-20,-42,-4,-5,-27,10,-28,-19,]),'IF':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[-76,12,-3,12,-15,12,-30,-14,-15,-62,-63,12,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,12,12,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,12,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,12,-32,-76,-76,-18,-20,-42,-4,-5,-27,12,-28,-19,]),'FOR':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[-76,13,-3,13,-15,13,-30,-14,-15,-62,-63,13,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,13,13,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,13,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,13,-32,-76,-76,-18,-20,-42,-4,-5,-27,13,-28,-19,]),'WHILE':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[-76,14,-3,14,-15,14,-30,-14,-15,-62,-63,14,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,14,14,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,14,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,14,-32,-76,-76,-18,-20,-42,-4,-5,-27,14,-28,-19,]),'REPEAT':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[-76,15,-3,15,-15,15,-30,-14,-15,-62,-63,15,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,15,15,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,15,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,15,-32,-76,-76,-18,-20,-42,-4,-5,-27,15,-28,-19,]),'GOSUB':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[-76,16,-3,16,-15,16,-30,-14,-15,-62,-63,16,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,16,16,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,16,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,16,-32,-76,-76,-18,-20,-42,-4,-5,-27,16,-28,-19,]),'INPUT':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[-76,17,-3,17,-15,17,-30,-14,-15,-62,-63,17,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,17,17,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,17,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,17,-32,-76,-76,-18,-20,-42,-4,-5,-27,17,-28,-19,]),'PRINT':([2,3,5,7,8,9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,72,75,76,84,87,89,90,91,92,95,96,97,98,99,100,101,104,105,120,121,123,125,127,129,131,133,136,138,142,143,145,147,148,149,152,153,154,155,156,157,160,161,],[-76,18,-3,18,-15,18,-30,-14,-15,-62,-63,18,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,18,18,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,18,-29,-57,-2,-6,-17,-34,-65,-21,-58,-35,18,-32,-76,-76,-18,-20,-42,-4,-5,-27,18,-28,-19,]),'SUBPROCEDURE':([2,3,5,6,7,8,9,23,24,25,29,30,35,37,38,39,40,41,42,43,45,46,47,48,64,69,76,84,89,90,91,92,95,96,97,98,99,100,101,104,105,121,123,125,127,128,129,133,136,138,142,145,147,148,149,152,153,154,155,160,161,],[-76,-76,-3,21,-76,-13,-76,-12,-14,-15,-62,-63,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-55,-54,-64,-59,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,-29,-57,-2,-6,21,-17,-65,-21,-58,-35,-32,-76,-76,-18,-20,-42,-4,-5,-28,-19,]),'END':([2,3,5,6,7,8,9,20,22,23,24,25,29,30,35,37,38,39,40,41,42,43,45,46,47,48,64,69,76,84,89,90,91,92,95,96,97,98,99,100,101,104,105,121,123,125,127,128,129,133,136,138,141,142,145,147,148,149,152,153,154,155,160,161,],[-76,-76,-3,-76,-76,-13,-76,51,-11,-12,-14,-15,-62,-63,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-55,-54,-64,-59,-23,-41,-48,-49,-51,-52,-56,-76,-7,-8,-9,-16,-76,-29,-57,-2,-6,-76,-17,-65,-21,-58,-10,-35,-32,-76,-76,-18,-20,-42,-4,-5,-28,-19,]),'ID':([4,10,11,13,16,18,19,21,26,27,31,44,58,61,62,63,65,66,67,71,73,77,78,79,80,81,82,83,86,94,122,126,134,137,159,],[-40,-40,-40,32,35,42,50,52,50,50,42,42,84,90,84,84,-40,84,84,50,42,42,42,42,42,42,42,42,84,50,-40,140,42,50,160,]),'RETURN':([7,8,9,23,24,25,29,30,35,37,38,39,40,41,42,43,45,46,47,48,64,69,72,76,84,89,90,91,92,95,96,97,99,100,101,103,104,105,121,123,127,129,133,136,138,142,145,147,148,149,152,153,154,155,160,161,],[-76,-13,-76,-12,-14,-15,-62,-63,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-55,-54,-76,-64,-59,-23,-41,-48,-49,-51,-52,-56,-7,-8,-9,128,-16,-76,-29,-57,-6,-17,-65,-21,-58,-35,-32,-76,-76,-18,-20,-42,-4,-5,-28,-19,]),'UNTIL':([9,15,24,25,29,30,34,35,37,38,39,40,41,42,43,45,46,47,48,60,64,69,76,84,89,90,91,92,95,96,97,99,100,101,104,105,121,123,127,129,133,136,138,142,145,147,148,149,152,153,154,155,160,161,],[-76,-30,-14,-15,-62,-63,-76,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,88,-55,-54,-64,-59,-23,-41,-48,-49,-51,-52,-56,-7,-8,-9,-16,-76,-29,-57,-6,-17,-65,-21,-58,-35,-32,-76,-76,-18,-20,-42,-4,-5,-28,-19,]),'ELSE':([9,24,25,29,30,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,75,76,84,89,90,91,92,95,96,97,99,100,101,104,105,106,121,123,127,129,133,136,138,142,145,147,148,149,152,153,154,155,160,161,],[-76,-14,-15,-62,-63,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,-76,-64,-59,-23,-41,-48,-49,-51,-52,-56,-7,-8,-9,-16,-76,131,-29,-57,-6,-17,-65,-21,-58,-35,-32,-76,-76,-18,-20,-42,-4,-5,-28,-19,]),'EIF':([9,24,25,29,30,35,37,38,39,40,41,42,43,45,46,47,48,55,64,69,75,76,84,89,90,91,92,95,96,97,99,100,101,104,105,106,121,123,127,129,130,131,132,133,136,138,142,143,145,147,148,149,150,152,153,154,155,160,161,],[-76,-14,-15,-62,-63,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-33,-55,-54,-76,-64,-59,-23,-41,-48,-49,-51,-52,-56,-7,-8,-9,-16,-76,-76,-29,-57,-6,-17,142,-34,-37,-65,-21,-58,-35,-76,-32,-76,-76,-18,-36,-20,-42,-4,-5,-28,-19,]),'WEND':([9,24,25,29,30,35,37,38,39,40,41,42,43,45,46,47,48,64,69,76,84,87,89,90,91,92,95,96,97,99,100,101,104,105,120,121,123,127,129,133,135,136,138,142,145,147,148,149,152,153,154,155,160,161,],[-76,-14,-15,-62,-63,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-55,-54,-64,-59,-31,-23,-41,-48,-49,-51,-52,-56,-7,-8,-9,-16,-76,-76,-29,-57,-6,-17,-65,145,-21,-58,-35,-32,-76,-76,-18,-20,-42,-4,-5,-28,-19,]),'NEXT':([9,24,25,29,30,35,37,38,39,40,41,42,43,45,46,47,48,64,69,76,84,89,90,91,92,95,96,97,99,100,101,104,105,121,123,127,129,133,136,138,142,145,147,148,149,152,153,154,155,156,157,158,160,161,],[-76,-14,-15,-62,-63,-22,-47,-24,-43,-44,-45,-46,-50,-53,-59,-60,-61,-55,-54,-64,-59,-23,-41,-48,-49,-51,-52,-56,-7,-8,-9,-16,-76,-29,-57,-6,-17,-65,-21,-58,-35,-32,-76,-76,-18,-20,-42,-4,-5,-27,-76,159,-28,-19,]),'TRUE':([12,14,18,31,33,44,73,77,78,79,80,81,82,83,88,107,108,109,110,134,],[29,-30,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-66,-67,-68,29,]),'FALSE':([12,14,18,31,33,44,73,77,78,79,80,81,82,83,88,107,108,109,110,134,],[30,-30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-66,-67,-68,30,]),'OPENPAR':([12,14,18,31,33,44,58,62,63,66,67,73,77,78,79,80,81,82,83,86,88,107,108,109,110,126,134,],[31,-30,44,44,31,44,86,86,86,86,86,44,44,44,44,44,44,44,44,86,31,31,-66,-67,-68,86,44,]),'WORDVAL':([17,18,31,44,73,77,78,79,80,81,82,83,134,],[37,37,37,37,37,37,37,37,37,37,37,37,37,]),'INTVAL':([18,31,44,58,62,63,65,66,67,73,77,78,79,80,81,82,83,86,126,134,],[47,47,47,47,47,47,93,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'FLOATVAL':([18,31,44,58,62,63,66,67,73,77,78,79,80,81,82,83,86,126,134,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'THEN':([28,29,30,76,133,],[55,-62,-63,-64,-65,]),'GREATHER':([29,30,37,39,40,41,42,43,45,46,47,48,57,64,68,69,76,84,91,92,95,96,97,123,133,138,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,77,-55,-43,-54,-64,-59,-48,-49,-51,-52,-56,-57,-65,-58,]),'GREATHEREQUAL':([29,30,37,39,40,41,42,43,45,46,47,48,57,64,68,69,76,84,91,92,95,96,97,123,133,138,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,78,-55,-43,-54,-64,-59,-48,-49,-51,-52,-56,-57,-65,-58,]),'SMALLER':([29,30,37,39,40,41,42,43,45,46,47,48,57,64,68,69,76,84,91,92,95,96,97,123,133,138,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,79,-55,-43,-54,-64,-59,-48,-49,-51,-52,-56,-57,-65,-58,]),'SMALLEREQUAL':([29,30,37,39,40,41,42,43,45,46,47,48,57,64,68,69,76,84,91,92,95,96,97,123,133,138,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,80,-55,-43,-54,-64,-59,-48,-49,-51,-52,-56,-57,-65,-58,]),'NOTEQUAL':([29,30,37,39,40,41,42,43,45,46,47,48,57,64,68,69,76,84,91,92,95,96,97,123,133,138,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,81,-55,-43,-54,-64,-59,-48,-49,-51,-52,-56,-57,-65,-58,]),'EQUALTO':([29,30,37,39,40,41,42,43,45,46,47,48,57,64,68,69,76,84,91,92,95,96,97,123,133,138,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,82,-55,-43,-54,-64,-59,-48,-49,-51,-52,-56,-57,-65,-58,]),'error':([29,30,37,39,40,41,42,43,45,46,47,48,57,64,68,69,76,84,91,92,95,96,97,123,133,138,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,83,-55,-43,-54,-64,-59,-48,-49,-51,-52,-56,-57,-65,-58,]),'DO':([29,30,37,39,40,41,42,43,45,46,47,48,59,64,69,76,84,91,92,95,96,97,123,133,138,144,151,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,87,-55,-54,-64,-59,-48,-49,-51,-52,-56,-57,-65,-58,-26,156,]),'CLOSINGPAR':([29,30,37,39,40,41,42,43,45,46,47,48,56,64,68,69,76,84,91,92,95,96,97,111,112,113,114,115,116,117,119,123,133,138,],[-62,-63,-47,-43,-44,-45,-46,-50,-53,-59,-60,-61,76,-55,97,-54,-64,-59,-48,-49,-51,-52,-56,-69,-70,-71,-72,-73,-74,-75,97,-57,-65,-58,]),'EQUALS':([32,50,53,102,],[58,-39,73,-38,]),'COMA':([36,37,50,],[61,-47,71,]),'PLUS':([39,42,43,45,46,47,48,64,68,69,84,85,91,92,95,96,97,119,123,138,139,140,],[62,-59,-50,-53,-59,-60,-61,-55,62,-54,-59,62,-48,-49,-51,-52,-56,62,-57,-58,62,-59,]),'MINUS':([39,42,43,45,46,47,48,64,68,69,84,85,91,92,95,96,97,119,123,138,139,140,],[63,-59,-50,-53,-59,-60,-61,-55,63,-54,-59,63,-48,-49,-51,-52,-56,63,-57,-58,63,-59,]),'OPENBRACKET':([42,84,90,98,99,100,101,105,140,147,148,],[65,65,122,126,-7,-8,-9,126,65,126,126,]),'MULTIPLY':([42,43,45,46,47,48,64,69,84,91,92,95,96,97,123,138,140,],[-59,66,-53,-59,-60,-61,-55,-54,-59,66,66,-51,-52,-56,-57,-58,-59,]),'DIVIDE':([42,43,45,46,47,48,64,69,84,91,92,95,96,97,123,138,140,],[-59,67,-53,-59,-60,-61,-55,-54,-59,67,67,-51,-52,-56,-57,-58,-59,]),'TO':([43,45,46,47,48,64,69,84,85,91,92,95,96,97,118,123,138,],[-50,-53,-59,-60,-61,-55,-54,-59,-25,-48,-49,-51,-52,-56,134,-57,-58,]),'CLOSINGBRACKET':([43,45,46,47,48,50,64,69,84,91,92,93,95,96,97,102,123,124,138,139,140,146,],[-50,-53,-59,-60,-61,-39,-55,-54,-59,-48,-49,123,-51,-52,-56,-38,-57,138,-58,147,148,153,]),'AS':([49,50,54,102,],[70,-39,74,-38,]),'TWOPOINTS':([52,],[72,]),'INT':([70,74,],[99,99,]),'FLOAT':([70,74,],[100,100,]),'WORD':([70,74,],[101,101,]),'AND':([76,],[108,]),'OR':([76,],[109,]),'NOT':([76,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'V':([2,],[3,]),'empty':([2,3,6,7,9,34,72,75,98,105,106,120,128,143,147,148,157,],[5,8,22,8,25,25,8,25,127,127,132,25,22,25,127,127,25,]),'M':([3,7,72,],[6,23,103,]),'F':([3,7,9,34,72,75,120,143,157,],[7,7,24,60,7,106,135,150,158,]),'E':([3,7,9,34,72,75,120,143,157,],[9,9,9,9,9,9,9,9,9,]),'setType':([4,10,11,65,122,],[19,26,27,94,137,]),'S':([6,128,],[20,141,]),'EL':([12,18,31,33,44,73,77,78,79,80,81,82,83,88,107,134,],[28,41,41,59,41,41,41,41,41,41,41,41,41,121,133,41,]),'while_first_conditional':([14,15,],[33,34,]),'ES':([17,18,31,44,73,77,78,79,80,81,82,83,134,],[36,40,40,40,40,40,40,40,40,40,40,40,40,]),'Ex':([18,31,44,73,77,78,79,80,81,82,83,134,],[38,57,57,104,111,112,113,114,115,116,117,144,]),'EA':([18,31,44,58,73,77,78,79,80,81,82,83,86,126,134,],[39,39,68,85,39,39,39,39,39,39,39,39,119,139,39,]),'P':([18,31,44,58,62,63,73,77,78,79,80,81,82,83,86,126,134,],[43,43,43,43,91,92,43,43,43,43,43,43,43,43,43,43,43,]),'N':([18,31,44,58,62,63,66,67,73,77,78,79,80,81,82,83,86,126,134,],[45,45,45,45,45,45,95,96,45,45,45,45,45,45,45,45,45,45,45,]),'cte':([18,31,44,58,62,63,66,67,73,77,78,79,80,81,82,83,86,126,134,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'Idv':([19,26,27,71,94,137,],[49,53,54,102,124,146,]),'O':([31,44,],[56,56,]),'saveID':([42,46,84,140,],[64,69,64,64,]),'first_conditional':([55,],[75,]),'IDEx':([61,],[89,]),'T':([70,74,],[98,105,]),'OL':([76,],[107,]),'for_assignation':([85,],[118,]),'while_second_conditional':([87,],[120,]),'Arr':([98,105,147,148,],[125,129,154,155,]),'Esf':([106,],[130,]),'repeat_conditional':([121,],[136,]),'second_conditional':([131,],[143,]),'final_conditional':([142,],[149,]),'for_conditional':([144,],[151,]),'while_final_conditional':([145,],[152,]),'for_save_conditional':([156,],[157,]),'for_conditional_end':([160,],[161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM V M S END','PROGRAMA',5,'p_PROGRAMA','syntax_analyzer.py',357),
  ('V -> DIM setType Idv AS T Arr','V',6,'p_V','syntax_analyzer.py',362),
  ('V -> empty','V',1,'p_V','syntax_analyzer.py',363),
  ('Arr -> OPENBRACKET EA CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',372),
  ('Arr -> OPENBRACKET ID CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',373),
  ('Arr -> empty','Arr',1,'p_Arr','syntax_analyzer.py',374),
  ('T -> INT','T',1,'p_T','syntax_analyzer.py',379),
  ('T -> FLOAT','T',1,'p_T','syntax_analyzer.py',380),
  ('T -> WORD','T',1,'p_T','syntax_analyzer.py',381),
  ('S -> SUBPROCEDURE ID TWOPOINTS M RETURN S','S',6,'p_S','syntax_analyzer.py',387),
  ('S -> empty','S',1,'p_S','syntax_analyzer.py',388),
  ('M -> F M','M',2,'p_M','syntax_analyzer.py',393),
  ('M -> empty','M',1,'p_M','syntax_analyzer.py',394),
  ('F -> E F','F',2,'p_F','syntax_analyzer.py',399),
  ('F -> empty','F',1,'p_F','syntax_analyzer.py',400),
  ('E -> LET setType Idv EQUALS Ex','E',5,'p_E','syntax_analyzer.py',405),
  ('E -> DIM setType Idv AS T Arr','E',6,'p_E','syntax_analyzer.py',406),
  ('E -> IF EL THEN first_conditional F Esf EIF final_conditional','E',8,'p_E','syntax_analyzer.py',407),
  ('E -> FOR ID EQUALS EA for_assignation TO Ex for_conditional DO for_save_conditional F NEXT ID for_conditional_end','E',14,'p_E','syntax_analyzer.py',408),
  ('E -> WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional','E',8,'p_E','syntax_analyzer.py',409),
  ('E -> REPEAT while_first_conditional F UNTIL EL repeat_conditional','E',6,'p_E','syntax_analyzer.py',410),
  ('E -> GOSUB ID','E',2,'p_E','syntax_analyzer.py',411),
  ('E -> INPUT ES COMA IDEx','E',4,'p_E','syntax_analyzer.py',412),
  ('E -> PRINT Ex','E',2,'p_E','syntax_analyzer.py',413),
  ('for_assignation -> <empty>','for_assignation',0,'p_for_assignation','syntax_analyzer.py',428),
  ('for_conditional -> <empty>','for_conditional',0,'p_for_conditional','syntax_analyzer.py',434),
  ('for_save_conditional -> <empty>','for_save_conditional',0,'p_for_save_conditional','syntax_analyzer.py',445),
  ('for_conditional_end -> <empty>','for_conditional_end',0,'p_for_conditional_end','syntax_analyzer.py',457),
  ('repeat_conditional -> <empty>','repeat_conditional',0,'p_repeat_conditional','syntax_analyzer.py',476),
  ('while_first_conditional -> <empty>','while_first_conditional',0,'p_while_first_conditional','syntax_analyzer.py',487),
  ('while_second_conditional -> <empty>','while_second_conditional',0,'p_while_second_conditional','syntax_analyzer.py',496),
  ('while_final_conditional -> <empty>','while_final_conditional',0,'p_while_final_conditional','syntax_analyzer.py',508),
  ('first_conditional -> <empty>','first_conditional',0,'p_first_conditional','syntax_analyzer.py',522),
  ('second_conditional -> <empty>','second_conditional',0,'p_second_conditional','syntax_analyzer.py',533),
  ('final_conditional -> <empty>','final_conditional',0,'p_final_conditional','syntax_analyzer.py',545),
  ('Esf -> ELSE second_conditional F','Esf',3,'p_Esf','syntax_analyzer.py',553),
  ('Esf -> empty','Esf',1,'p_Esf','syntax_analyzer.py',554),
  ('Idv -> ID COMA Idv','Idv',3,'p_Idv','syntax_analyzer.py',559),
  ('Idv -> ID','Idv',1,'p_Idv','syntax_analyzer.py',560),
  ('setType -> <empty>','setType',0,'p_setType','syntax_analyzer.py',572),
  ('IDEx -> ID','IDEx',1,'p_IDEx','syntax_analyzer.py',580),
  ('IDEx -> ID OPENBRACKET setType Idv CLOSINGBRACKET','IDEx',5,'p_IDEx','syntax_analyzer.py',581),
  ('Ex -> EA','Ex',1,'p_Ex','syntax_analyzer.py',586),
  ('Ex -> ES','Ex',1,'p_Ex','syntax_analyzer.py',587),
  ('Ex -> EL','Ex',1,'p_Ex','syntax_analyzer.py',588),
  ('Ex -> ID','Ex',1,'p_Ex','syntax_analyzer.py',589),
  ('ES -> WORDVAL','ES',1,'p_ES','syntax_analyzer.py',595),
  ('EA -> EA PLUS P','EA',3,'p_EA','syntax_analyzer.py',600),
  ('EA -> EA MINUS P','EA',3,'p_EA','syntax_analyzer.py',601),
  ('EA -> P','EA',1,'p_EA','syntax_analyzer.py',602),
  ('P -> P MULTIPLY N','P',3,'p_P','syntax_analyzer.py',625),
  ('P -> P DIVIDE N','P',3,'p_P','syntax_analyzer.py',626),
  ('P -> N','P',1,'p_P','syntax_analyzer.py',627),
  ('N -> cte saveID','N',2,'p_N','syntax_analyzer.py',651),
  ('N -> ID saveID','N',2,'p_N','syntax_analyzer.py',652),
  ('N -> OPENPAR EA CLOSINGPAR','N',3,'p_N','syntax_analyzer.py',653),
  ('N -> ID OPENBRACKET INTVAL CLOSINGBRACKET','N',4,'p_N','syntax_analyzer.py',654),
  ('N -> ID OPENBRACKET setType Idv CLOSINGBRACKET','N',5,'p_N','syntax_analyzer.py',655),
  ('saveID -> <empty>','saveID',0,'p_saveID','syntax_analyzer.py',664),
  ('cte -> INTVAL','cte',1,'p_cte','syntax_analyzer.py',672),
  ('cte -> FLOATVAL','cte',1,'p_cte','syntax_analyzer.py',673),
  ('EL -> TRUE','EL',1,'p_EL','syntax_analyzer.py',679),
  ('EL -> FALSE','EL',1,'p_EL','syntax_analyzer.py',680),
  ('EL -> OPENPAR O CLOSINGPAR','EL',3,'p_EL','syntax_analyzer.py',681),
  ('EL -> OPENPAR O CLOSINGPAR OL EL','EL',5,'p_EL','syntax_analyzer.py',682),
  ('OL -> AND','OL',1,'p_OL','syntax_analyzer.py',700),
  ('OL -> OR','OL',1,'p_OL','syntax_analyzer.py',701),
  ('OL -> NOT','OL',1,'p_OL','syntax_analyzer.py',702),
  ('O -> Ex GREATHER Ex','O',3,'p_O','syntax_analyzer.py',710),
  ('O -> Ex GREATHEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',711),
  ('O -> Ex SMALLER Ex','O',3,'p_O','syntax_analyzer.py',712),
  ('O -> Ex SMALLEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',713),
  ('O -> Ex NOTEQUAL Ex','O',3,'p_O','syntax_analyzer.py',714),
  ('O -> Ex EQUALTO Ex','O',3,'p_O','syntax_analyzer.py',715),
  ('O -> Ex error Ex','O',3,'p_O_error','syntax_analyzer.py',742),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',749),
]
