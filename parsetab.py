
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSINGBRACKET CLOSINGPAR COMA COMMENT DIM DIVIDE DO EIF ELSE END EQUALS EQUALTO FALSE FLOAT FLOATVAL FOR GOSUB GREATHER GREATHEREQUAL ID IF INPUT INT INTVAL LET MINUS MULTIPLY NEXT NOT NOTEQUAL OPENBRACKET OPENPAR OR PLUS PRINT PROGRAM REPEAT RETURN SMALLER SMALLEREQUAL SUBPROCEDURE THEN TO TRUE TWOPOINTS UNTIL WEND WHILE WORD WORDVAL\n  PROGRAMA : PROGRAM V M endProgram S END\n  \n  endProgram :\n  \n    V : DIM setType Idv AS T Arr\n      | empty\n  \n  Arr : OPENBRACKET arr_space CLOSINGBRACKET\n      | empty\n  \n  arr_space : arr_index COMA arr_space\n            | arr_index\n  \n  arr_index : INTVAL\n            | ID\n  \n  T : INT\n    | FLOAT\n    | WORD\n  \n  S : SUBPROCEDURE ID fillSub TWOPOINTS M RETURN endProcedure S\n    | empty\n  \n  fillSub :\n  \n  endProcedure :\n  \n  M : F\n  \n  F : E F\n    | empty\n  \n  E : LET setType IdLet EQUALS EA\n    | DIM setType Idv AS T Arr\n    | IF EL THEN first_conditional F Esf EIF final_conditional\n    | FOR ID EQUALS EA for_assignation TO EA for_conditional DO for_save_conditional F NEXT ID for_conditional_end\n    | WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional\n    | REPEAT while_first_conditional F UNTIL EL repeat_conditional\n    | GOSUB ID\n    | INPUT IDEx\n    | PRINT EA\n  \n  for_assignation :\n  \n  for_conditional :\n  \n  for_save_conditional :\n  \n  for_conditional_end :\n  \n  repeat_conditional :\n  \n  while_first_conditional :\n  \n  while_second_conditional :\n  \n  while_final_conditional :\n  \n  first_conditional :\n  \n  second_conditional :\n  \n  final_conditional :\n  \n  Esf : ELSE second_conditional F\n      | empty\n  \n  IdLet : ID\n        | ID Arr\n  \n  Idv : ID COMA Idv\n      | ID\n  \n  setType :\n  \n  IDEx : ID\n       | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  EA : EA PLUS P\n     | EA MINUS P\n     | P\n  \n  P : P MULTIPLY N\n    | P DIVIDE N\n    | N\n  \n  N : ID Arr saveID\n    | cte saveID\n    | ID saveID\n    | OPENPAR EA CLOSINGPAR\n  \n  saveID :\n  \n  cte : FLOATVAL\n      | INTVAL\n      | MINUS INTVAL\n      | MINUS FLOATVAL\n  \n  EL : TRUE\n     | FALSE \n     | OPENPAR O CLOSINGPAR\n     | OPENPAR O CLOSINGPAR OL EL\n  \n  OL : AND\n     | OR\n     | NOT\n  \n  O : EA GREATHER EA\n    | EA GREATHEREQUAL EA\n    | EA SMALLER EA\n    | EA SMALLEREQUAL EA\n    | EA NOTEQUAL EA\n    | EA EQUALTO EA\n  \n  O : EA error EA\n  \n  empty :\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,72,],[0,-1,]),'DIM':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[4,11,-4,11,-35,-65,-66,11,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,11,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,11,-34,-5,-3,11,-22,-39,-68,-26,-49,-40,11,-37,-23,-25,-32,11,-33,-24,]),'LET':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[-79,10,-4,10,-35,-65,-66,10,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,10,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,10,-34,-5,-3,10,-22,-39,-68,-26,-49,-40,10,-37,-23,-25,-32,10,-33,-24,]),'IF':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[-79,12,-4,12,-35,-65,-66,12,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,12,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,12,-34,-5,-3,12,-22,-39,-68,-26,-49,-40,12,-37,-23,-25,-32,12,-33,-24,]),'FOR':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[-79,13,-4,13,-35,-65,-66,13,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,13,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,13,-34,-5,-3,13,-22,-39,-68,-26,-49,-40,13,-37,-23,-25,-32,13,-33,-24,]),'WHILE':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[-79,14,-4,14,-35,-65,-66,14,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,14,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,14,-34,-5,-3,14,-22,-39,-68,-26,-49,-40,14,-37,-23,-25,-32,14,-33,-24,]),'REPEAT':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[-79,15,-4,15,-35,-65,-66,15,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,15,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,15,-34,-5,-3,15,-22,-39,-68,-26,-49,-40,15,-37,-23,-25,-32,15,-33,-24,]),'GOSUB':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[-79,16,-4,16,-35,-65,-66,16,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,16,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,16,-34,-5,-3,16,-22,-39,-68,-26,-49,-40,16,-37,-23,-25,-32,16,-33,-24,]),'INPUT':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[-79,17,-4,17,-35,-65,-66,17,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,17,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,17,-34,-5,-3,17,-22,-39,-68,-26,-49,-40,17,-37,-23,-25,-32,17,-33,-24,]),'PRINT':([2,3,5,8,15,25,26,30,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,87,90,91,92,93,94,99,100,101,102,103,106,107,121,122,124,126,127,128,130,132,135,136,139,140,142,144,147,149,151,154,155,],[-79,18,-4,18,-35,-65,-66,18,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,18,-67,-36,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,18,-34,-5,-3,18,-22,-39,-68,-26,-49,-40,18,-37,-23,-25,-32,18,-33,-24,]),'SUBPROCEDURE':([2,3,5,6,7,8,9,20,21,25,26,31,32,33,34,35,37,38,39,41,42,62,63,64,65,67,68,78,90,91,92,93,94,99,100,101,102,103,106,107,122,124,126,128,132,135,136,139,142,143,144,147,148,154,155,],[-79,-79,-4,-2,-18,-79,-20,46,-19,-65,-66,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-63,-64,-60,-58,-6,-57,-67,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,-34,-5,-3,-22,-68,-26,-49,-40,-37,-17,-23,-25,46,-33,-24,]),'END':([2,3,5,6,7,8,9,20,21,25,26,31,32,33,34,35,37,38,39,41,42,45,47,62,63,64,65,67,68,78,90,91,92,93,94,99,100,101,102,103,106,107,122,124,126,128,132,135,136,139,142,143,144,147,148,150,154,155,],[-79,-79,-4,-2,-18,-79,-20,-79,-19,-65,-66,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,72,-15,-63,-64,-60,-58,-6,-57,-67,-50,-51,-53,-54,-56,-59,-79,-11,-12,-13,-21,-79,-34,-5,-3,-22,-68,-26,-49,-40,-37,-17,-23,-25,-79,-14,-33,-24,]),'ID':([4,10,11,13,16,17,18,19,22,23,27,40,46,54,57,58,59,60,61,66,71,74,79,80,81,82,83,84,85,89,125,133,153,],[-47,-47,-47,28,31,33,38,44,49,44,38,38,73,38,-47,38,38,38,38,98,44,38,38,38,38,38,38,38,38,44,98,38,154,]),'RETURN':([7,8,9,21,25,26,31,32,33,34,35,37,38,39,41,42,62,63,64,65,67,68,78,90,91,92,93,94,99,101,102,103,106,107,122,124,127,128,132,135,136,138,139,142,144,147,154,155,],[-18,-79,-20,-19,-65,-66,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-63,-64,-60,-58,-6,-57,-67,-50,-51,-53,-54,-56,-59,-11,-12,-13,-21,-79,-34,-5,-79,-22,-68,-26,-49,143,-40,-37,-23,-25,-33,-24,]),'UNTIL':([8,9,15,21,25,26,30,31,32,33,34,35,37,38,39,41,42,56,62,63,64,65,67,68,78,90,91,92,93,94,99,101,102,103,106,107,122,124,128,132,135,136,139,142,144,147,154,155,],[-79,-20,-35,-19,-65,-66,-79,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,88,-63,-64,-60,-58,-6,-57,-67,-50,-51,-53,-54,-56,-59,-11,-12,-13,-21,-79,-34,-5,-22,-68,-26,-49,-40,-37,-23,-25,-33,-24,]),'ELSE':([8,9,21,25,26,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,90,91,92,93,94,99,101,102,103,106,107,108,122,124,128,132,135,136,139,142,144,147,154,155,],[-79,-20,-19,-65,-66,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,-79,-67,-50,-51,-53,-54,-56,-59,-11,-12,-13,-21,-79,130,-34,-5,-22,-68,-26,-49,-40,-37,-23,-25,-33,-24,]),'EIF':([8,9,21,25,26,31,32,33,34,35,37,38,39,41,42,51,62,63,64,65,67,68,77,78,90,91,92,93,94,99,101,102,103,106,107,108,122,124,128,129,130,131,132,135,136,139,140,142,144,145,147,154,155,],[-79,-20,-19,-65,-66,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-38,-63,-64,-60,-58,-6,-57,-79,-67,-50,-51,-53,-54,-56,-59,-11,-12,-13,-21,-79,-79,-34,-5,-22,139,-39,-42,-68,-26,-49,-40,-79,-37,-23,-41,-25,-33,-24,]),'WEND':([8,9,21,25,26,31,32,33,34,35,37,38,39,41,42,62,63,64,65,67,68,78,87,90,91,92,93,94,99,101,102,103,106,107,121,122,124,128,132,134,135,136,139,142,144,147,154,155,],[-79,-20,-19,-65,-66,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-63,-64,-60,-58,-6,-57,-67,-36,-50,-51,-53,-54,-56,-59,-11,-12,-13,-21,-79,-79,-34,-5,-22,-68,142,-26,-49,-40,-37,-23,-25,-33,-24,]),'NEXT':([8,9,21,25,26,31,32,33,34,35,37,38,39,41,42,62,63,64,65,67,68,78,90,91,92,93,94,99,101,102,103,106,107,122,124,128,132,135,136,139,142,144,147,149,151,152,154,155,],[-79,-20,-19,-65,-66,-27,-28,-48,-29,-52,-55,-60,-60,-61,-62,-63,-64,-60,-58,-6,-57,-67,-50,-51,-53,-54,-56,-59,-11,-12,-13,-21,-79,-34,-5,-22,-68,-26,-49,-40,-37,-23,-25,-32,-79,153,-33,-24,]),'TRUE':([12,14,29,88,109,110,111,112,],[25,-35,25,25,25,-69,-70,-71,]),'FALSE':([12,14,29,88,109,110,111,112,],[26,-35,26,26,26,-69,-70,-71,]),'OPENPAR':([12,14,18,27,29,40,54,58,59,60,61,74,79,80,81,82,83,84,85,88,109,110,111,112,133,],[27,-35,40,40,27,40,40,40,40,40,40,40,40,40,40,40,40,40,40,27,27,-69,-70,-71,40,]),'FLOATVAL':([18,27,36,40,54,58,59,60,61,74,79,80,81,82,83,84,85,133,],[41,41,63,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'INTVAL':([18,27,36,40,54,58,59,60,61,66,74,79,80,81,82,83,84,85,125,133,],[42,42,62,42,42,42,42,42,42,97,42,42,42,42,42,42,42,42,97,42,]),'MINUS':([18,27,34,35,37,38,39,40,41,42,53,54,58,59,60,61,62,63,64,65,67,68,69,74,79,80,81,82,83,84,85,86,90,91,92,93,94,99,106,113,114,115,116,117,118,119,124,133,141,],[36,36,59,-52,-55,-60,-60,36,-61,-62,59,36,36,36,36,36,-63,-64,-60,-58,-6,-57,59,36,36,36,36,36,36,36,36,59,-50,-51,-53,-54,-56,-59,59,59,59,59,59,59,59,59,-5,36,59,]),'THEN':([24,25,26,78,132,],[51,-65,-66,-67,-68,]),'DO':([25,26,35,37,38,39,41,42,55,62,63,64,65,67,68,78,90,91,92,93,94,99,124,132,141,146,],[-65,-66,-52,-55,-60,-60,-61,-62,87,-63,-64,-60,-58,-6,-57,-67,-50,-51,-53,-54,-56,-59,-5,-68,-31,149,]),'EQUALS':([28,48,49,67,75,124,],[54,74,-43,-6,-44,-5,]),'OPENBRACKET':([33,38,49,100,101,102,103,107,],[57,66,66,66,-11,-12,-13,66,]),'PLUS':([34,35,37,38,39,41,42,53,62,63,64,65,67,68,69,86,90,91,92,93,94,99,106,113,114,115,116,117,118,119,124,141,],[58,-52,-55,-60,-60,-61,-62,58,-63,-64,-60,-58,-6,-57,58,58,-50,-51,-53,-54,-56,-59,58,58,58,58,58,58,58,58,-5,58,]),'GREATHER':([35,37,38,39,41,42,53,62,63,64,65,67,68,90,91,92,93,94,99,124,],[-52,-55,-60,-60,-61,-62,79,-63,-64,-60,-58,-6,-57,-50,-51,-53,-54,-56,-59,-5,]),'GREATHEREQUAL':([35,37,38,39,41,42,53,62,63,64,65,67,68,90,91,92,93,94,99,124,],[-52,-55,-60,-60,-61,-62,80,-63,-64,-60,-58,-6,-57,-50,-51,-53,-54,-56,-59,-5,]),'SMALLER':([35,37,38,39,41,42,53,62,63,64,65,67,68,90,91,92,93,94,99,124,],[-52,-55,-60,-60,-61,-62,81,-63,-64,-60,-58,-6,-57,-50,-51,-53,-54,-56,-59,-5,]),'SMALLEREQUAL':([35,37,38,39,41,42,53,62,63,64,65,67,68,90,91,92,93,94,99,124,],[-52,-55,-60,-60,-61,-62,82,-63,-64,-60,-58,-6,-57,-50,-51,-53,-54,-56,-59,-5,]),'NOTEQUAL':([35,37,38,39,41,42,53,62,63,64,65,67,68,90,91,92,93,94,99,124,],[-52,-55,-60,-60,-61,-62,83,-63,-64,-60,-58,-6,-57,-50,-51,-53,-54,-56,-59,-5,]),'EQUALTO':([35,37,38,39,41,42,53,62,63,64,65,67,68,90,91,92,93,94,99,124,],[-52,-55,-60,-60,-61,-62,84,-63,-64,-60,-58,-6,-57,-50,-51,-53,-54,-56,-59,-5,]),'error':([35,37,38,39,41,42,53,62,63,64,65,67,68,90,91,92,93,94,99,124,],[-52,-55,-60,-60,-61,-62,85,-63,-64,-60,-58,-6,-57,-50,-51,-53,-54,-56,-59,-5,]),'CLOSINGPAR':([35,37,38,39,41,42,52,62,63,64,65,67,68,69,90,91,92,93,94,99,113,114,115,116,117,118,119,124,],[-52,-55,-60,-60,-61,-62,78,-63,-64,-60,-58,-6,-57,99,-50,-51,-53,-54,-56,-59,-72,-73,-74,-75,-76,-77,-78,-5,]),'TO':([35,37,38,39,41,42,62,63,64,65,67,68,86,90,91,92,93,94,99,120,124,],[-52,-55,-60,-60,-61,-62,-63,-64,-60,-58,-6,-57,-30,-50,-51,-53,-54,-56,-59,133,-5,]),'MULTIPLY':([35,37,38,39,41,42,62,63,64,65,67,68,90,91,92,93,94,99,124,],[60,-55,-60,-60,-61,-62,-63,-64,-60,-58,-6,-57,60,60,-53,-54,-56,-59,-5,]),'DIVIDE':([35,37,38,39,41,42,62,63,64,65,67,68,90,91,92,93,94,99,124,],[61,-55,-60,-60,-61,-62,-63,-64,-60,-58,-6,-57,61,61,-53,-54,-56,-59,-5,]),'AS':([43,44,50,104,],[70,-46,76,-45,]),'COMA':([44,96,97,98,],[71,125,-9,-10,]),'CLOSINGBRACKET':([44,95,96,97,98,104,123,137,],[-46,124,-8,-9,-10,-45,136,-7,]),'INT':([70,76,],[101,101,]),'FLOAT':([70,76,],[102,102,]),'WORD':([70,76,],[103,103,]),'TWOPOINTS':([73,105,],[-16,127,]),'AND':([78,],[110,]),'OR':([78,],[111,]),'NOT':([78,],[112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'V':([2,],[3,]),'empty':([2,3,8,20,30,38,49,77,100,107,108,121,127,140,148,151,],[5,9,9,47,9,67,67,9,67,67,131,9,9,9,47,9,]),'M':([3,127,],[6,138,]),'F':([3,8,30,77,121,127,140,151,],[7,21,56,108,134,7,145,152,]),'E':([3,8,30,77,121,127,140,151,],[8,8,8,8,8,8,8,8,]),'setType':([4,10,11,57,],[19,22,23,89,]),'endProgram':([6,],[20,]),'EL':([12,29,88,109,],[24,55,122,132,]),'while_first_conditional':([14,15,],[29,30,]),'IDEx':([17,],[32,]),'EA':([18,27,40,54,74,79,80,81,82,83,84,85,133,],[34,53,69,86,106,113,114,115,116,117,118,119,141,]),'P':([18,27,40,54,58,59,74,79,80,81,82,83,84,85,133,],[35,35,35,35,90,91,35,35,35,35,35,35,35,35,35,]),'N':([18,27,40,54,58,59,60,61,74,79,80,81,82,83,84,85,133,],[37,37,37,37,37,37,92,93,37,37,37,37,37,37,37,37,37,]),'cte':([18,27,40,54,58,59,60,61,74,79,80,81,82,83,84,85,133,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'Idv':([19,23,71,89,],[43,50,104,123,]),'S':([20,148,],[45,150,]),'IdLet':([22,],[48,]),'O':([27,],[52,]),'Arr':([38,49,100,107,],[64,75,126,128,]),'saveID':([38,39,64,],[65,68,94,]),'first_conditional':([51,],[77,]),'arr_space':([66,125,],[95,137,]),'arr_index':([66,125,],[96,96,]),'T':([70,76,],[100,107,]),'fillSub':([73,],[105,]),'OL':([78,],[109,]),'for_assignation':([86,],[120,]),'while_second_conditional':([87,],[121,]),'Esf':([108,],[129,]),'repeat_conditional':([122,],[135,]),'second_conditional':([130,],[140,]),'final_conditional':([139,],[144,]),'for_conditional':([141,],[146,]),'while_final_conditional':([142,],[147,]),'endProcedure':([143,],[148,]),'for_save_conditional':([149,],[151,]),'for_conditional_end':([154,],[155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM V M endProgram S END','PROGRAMA',6,'p_PROGRAMA','syntax_analyzer.py',365),
  ('endProgram -> <empty>','endProgram',0,'p_endProgram','syntax_analyzer.py',376),
  ('V -> DIM setType Idv AS T Arr','V',6,'p_V','syntax_analyzer.py',383),
  ('V -> empty','V',1,'p_V','syntax_analyzer.py',384),
  ('Arr -> OPENBRACKET arr_space CLOSINGBRACKET','Arr',3,'p_Arr','syntax_analyzer.py',397),
  ('Arr -> empty','Arr',1,'p_Arr','syntax_analyzer.py',398),
  ('arr_space -> arr_index COMA arr_space','arr_space',3,'p_arr_space','syntax_analyzer.py',406),
  ('arr_space -> arr_index','arr_space',1,'p_arr_space','syntax_analyzer.py',407),
  ('arr_index -> INTVAL','arr_index',1,'p_arr_index','syntax_analyzer.py',416),
  ('arr_index -> ID','arr_index',1,'p_arr_index','syntax_analyzer.py',417),
  ('T -> INT','T',1,'p_T','syntax_analyzer.py',422),
  ('T -> FLOAT','T',1,'p_T','syntax_analyzer.py',423),
  ('T -> WORD','T',1,'p_T','syntax_analyzer.py',424),
  ('S -> SUBPROCEDURE ID fillSub TWOPOINTS M RETURN endProcedure S','S',8,'p_S','syntax_analyzer.py',430),
  ('S -> empty','S',1,'p_S','syntax_analyzer.py',431),
  ('fillSub -> <empty>','fillSub',0,'p_fillSub','syntax_analyzer.py',441),
  ('endProcedure -> <empty>','endProcedure',0,'p_endProcedure','syntax_analyzer.py',448),
  ('M -> F','M',1,'p_M','syntax_analyzer.py',458),
  ('F -> E F','F',2,'p_F','syntax_analyzer.py',463),
  ('F -> empty','F',1,'p_F','syntax_analyzer.py',464),
  ('E -> LET setType IdLet EQUALS EA','E',5,'p_E','syntax_analyzer.py',469),
  ('E -> DIM setType Idv AS T Arr','E',6,'p_E','syntax_analyzer.py',470),
  ('E -> IF EL THEN first_conditional F Esf EIF final_conditional','E',8,'p_E','syntax_analyzer.py',471),
  ('E -> FOR ID EQUALS EA for_assignation TO EA for_conditional DO for_save_conditional F NEXT ID for_conditional_end','E',14,'p_E','syntax_analyzer.py',472),
  ('E -> WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional','E',8,'p_E','syntax_analyzer.py',473),
  ('E -> REPEAT while_first_conditional F UNTIL EL repeat_conditional','E',6,'p_E','syntax_analyzer.py',474),
  ('E -> GOSUB ID','E',2,'p_E','syntax_analyzer.py',475),
  ('E -> INPUT IDEx','E',2,'p_E','syntax_analyzer.py',476),
  ('E -> PRINT EA','E',2,'p_E','syntax_analyzer.py',477),
  ('for_assignation -> <empty>','for_assignation',0,'p_for_assignation','syntax_analyzer.py',505),
  ('for_conditional -> <empty>','for_conditional',0,'p_for_conditional','syntax_analyzer.py',514),
  ('for_save_conditional -> <empty>','for_save_conditional',0,'p_for_save_conditional','syntax_analyzer.py',525),
  ('for_conditional_end -> <empty>','for_conditional_end',0,'p_for_conditional_end','syntax_analyzer.py',537),
  ('repeat_conditional -> <empty>','repeat_conditional',0,'p_repeat_conditional','syntax_analyzer.py',552),
  ('while_first_conditional -> <empty>','while_first_conditional',0,'p_while_first_conditional','syntax_analyzer.py',562),
  ('while_second_conditional -> <empty>','while_second_conditional',0,'p_while_second_conditional','syntax_analyzer.py',571),
  ('while_final_conditional -> <empty>','while_final_conditional',0,'p_while_final_conditional','syntax_analyzer.py',583),
  ('first_conditional -> <empty>','first_conditional',0,'p_first_conditional','syntax_analyzer.py',596),
  ('second_conditional -> <empty>','second_conditional',0,'p_second_conditional','syntax_analyzer.py',607),
  ('final_conditional -> <empty>','final_conditional',0,'p_final_conditional','syntax_analyzer.py',619),
  ('Esf -> ELSE second_conditional F','Esf',3,'p_Esf','syntax_analyzer.py',627),
  ('Esf -> empty','Esf',1,'p_Esf','syntax_analyzer.py',628),
  ('IdLet -> ID','IdLet',1,'p_IdLet','syntax_analyzer.py',633),
  ('IdLet -> ID Arr','IdLet',2,'p_IdLet','syntax_analyzer.py',634),
  ('Idv -> ID COMA Idv','Idv',3,'p_Idv','syntax_analyzer.py',647),
  ('Idv -> ID','Idv',1,'p_Idv','syntax_analyzer.py',648),
  ('setType -> <empty>','setType',0,'p_setType','syntax_analyzer.py',660),
  ('IDEx -> ID','IDEx',1,'p_IDEx','syntax_analyzer.py',667),
  ('IDEx -> ID OPENBRACKET setType Idv CLOSINGBRACKET','IDEx',5,'p_IDEx','syntax_analyzer.py',668),
  ('EA -> EA PLUS P','EA',3,'p_EA','syntax_analyzer.py',674),
  ('EA -> EA MINUS P','EA',3,'p_EA','syntax_analyzer.py',675),
  ('EA -> P','EA',1,'p_EA','syntax_analyzer.py',676),
  ('P -> P MULTIPLY N','P',3,'p_P','syntax_analyzer.py',699),
  ('P -> P DIVIDE N','P',3,'p_P','syntax_analyzer.py',700),
  ('P -> N','P',1,'p_P','syntax_analyzer.py',701),
  ('N -> ID Arr saveID','N',3,'p_N','syntax_analyzer.py',728),
  ('N -> cte saveID','N',2,'p_N','syntax_analyzer.py',729),
  ('N -> ID saveID','N',2,'p_N','syntax_analyzer.py',730),
  ('N -> OPENPAR EA CLOSINGPAR','N',3,'p_N','syntax_analyzer.py',731),
  ('saveID -> <empty>','saveID',0,'p_saveID','syntax_analyzer.py',745),
  ('cte -> FLOATVAL','cte',1,'p_cte','syntax_analyzer.py',769),
  ('cte -> INTVAL','cte',1,'p_cte','syntax_analyzer.py',770),
  ('cte -> MINUS INTVAL','cte',2,'p_cte','syntax_analyzer.py',771),
  ('cte -> MINUS FLOATVAL','cte',2,'p_cte','syntax_analyzer.py',772),
  ('EL -> TRUE','EL',1,'p_EL','syntax_analyzer.py',784),
  ('EL -> FALSE','EL',1,'p_EL','syntax_analyzer.py',785),
  ('EL -> OPENPAR O CLOSINGPAR','EL',3,'p_EL','syntax_analyzer.py',786),
  ('EL -> OPENPAR O CLOSINGPAR OL EL','EL',5,'p_EL','syntax_analyzer.py',787),
  ('OL -> AND','OL',1,'p_OL','syntax_analyzer.py',805),
  ('OL -> OR','OL',1,'p_OL','syntax_analyzer.py',806),
  ('OL -> NOT','OL',1,'p_OL','syntax_analyzer.py',807),
  ('O -> EA GREATHER EA','O',3,'p_O','syntax_analyzer.py',815),
  ('O -> EA GREATHEREQUAL EA','O',3,'p_O','syntax_analyzer.py',816),
  ('O -> EA SMALLER EA','O',3,'p_O','syntax_analyzer.py',817),
  ('O -> EA SMALLEREQUAL EA','O',3,'p_O','syntax_analyzer.py',818),
  ('O -> EA NOTEQUAL EA','O',3,'p_O','syntax_analyzer.py',819),
  ('O -> EA EQUALTO EA','O',3,'p_O','syntax_analyzer.py',820),
  ('O -> EA error EA','O',3,'p_O_error','syntax_analyzer.py',847),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',853),
]
