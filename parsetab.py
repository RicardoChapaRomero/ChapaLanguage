
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS CLOSINGBRACKET CLOSINGPAR COMA COMMENT DIM DIVIDE DO EIF ELSE END EQUALS EQUALTO FALSE FLOAT FLOATVAL FOR GOSUB GREATHER GREATHEREQUAL ID IF INPUT INT INTVAL LET MINUS MULTIPLY NEXT NOT NOTEQUAL OPENBRACKET OPENPAR OR PLUS PRINT PROGRAM RETURN SMALLER SMALLEREQUAL SUBPROCEDURE THEN TO TRUE TWOPOINTS WEND WHILE WORD WORDVAL\n  PROGRAMA : PROGRAM V M S END\n  \n    V : DIM setType Idv AS T Arr\n      | empty\n  \n  Arr : OPENBRACKET EA CLOSINGBRACKET Arr\n      | OPENBRACKET ID CLOSINGBRACKET Arr\n      | empty\n  \n  T : INT\n    | FLOAT\n    | WORD\n  \n  S : SUBPROCEDURE ID TWOPOINTS M RETURN S\n    | empty\n  \n  M : F M\n    | empty\n  \n  F : E F\n    | empty\n  \n  E : LET setType Idv EQUALS Ex\n    | DIM setType Idv AS T Arr\n    | IF EL THEN first_conditional F Esf EIF final_conditional\n    | FOR ID EQUALS EA TO Ex F NEXT ID\n    | WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional\n    | GOSUB ID\n    | INPUT ES COMA IDEx\n    | PRINT Ex\n  \n  while_first_conditional :\n  \n  while_second_conditional :\n  \n  while_final_conditional :\n  \n  first_conditional :\n  \n  second_conditional :\n  \n  final_conditional :\n  \n  Esf : ELSE second_conditional F\n      | empty\n  \n  Idv : ID COMA Idv\n      | ID\n  \n  setType :\n  \n  IDEx : ID\n       | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  Ex : EA\n     | ES\n     | EL\n     | ID\n  \n  ES : WORDVAL\n  \n  EA : EA PLUS P\n     | EA MINUS P\n     | P\n  \n  P : P MULTIPLY N\n    | P DIVIDE N\n    | N\n  \n  N : cte saveID\n    | ID saveID\n    | OPENPAR EA CLOSINGPAR\n    | ID OPENBRACKET INTVAL CLOSINGBRACKET\n    | ID OPENBRACKET setType Idv CLOSINGBRACKET\n  \n  saveID :\n  \n  cte : INTVAL\n      | FLOATVAL\n  \n  EL : TRUE \n     | FALSE \n     | OPENPAR O CLOSINGPAR\n     | OPENPAR O CLOSINGPAR OL EL\n  \n  OL : AND\n     | OR\n     | NOT\n  \n  O : Ex GREATHER Ex\n    | Ex GREATHEREQUAL Ex\n    | Ex SMALLER Ex\n    | Ex SMALLEREQUAL Ex\n    | Ex NOTEQUAL Ex\n    | Ex EQUALTO Ex\n  \n  O : Ex error Ex\n  \n  empty :\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,49,],[0,-1,]),'DIM':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,69,72,73,81,84,85,86,87,88,91,92,93,94,95,96,97,100,101,116,118,120,122,124,126,128,129,132,136,137,139,141,142,143,146,147,148,149,150,],[4,11,-3,11,-15,11,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,11,11,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,11,-51,-2,-6,-17,-28,-59,11,-52,-29,11,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'LET':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,69,72,73,81,84,85,86,87,88,91,92,93,94,95,96,97,100,101,116,118,120,122,124,126,128,129,132,136,137,139,141,142,143,146,147,148,149,150,],[-70,10,-3,10,-15,10,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,10,10,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,10,-51,-2,-6,-17,-28,-59,10,-52,-29,10,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'IF':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,69,72,73,81,84,85,86,87,88,91,92,93,94,95,96,97,100,101,116,118,120,122,124,126,128,129,132,136,137,139,141,142,143,146,147,148,149,150,],[-70,12,-3,12,-15,12,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,12,12,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,12,-51,-2,-6,-17,-28,-59,12,-52,-29,12,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'FOR':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,69,72,73,81,84,85,86,87,88,91,92,93,94,95,96,97,100,101,116,118,120,122,124,126,128,129,132,136,137,139,141,142,143,146,147,148,149,150,],[-70,13,-3,13,-15,13,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,13,13,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,13,-51,-2,-6,-17,-28,-59,13,-52,-29,13,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'WHILE':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,69,72,73,81,84,85,86,87,88,91,92,93,94,95,96,97,100,101,116,118,120,122,124,126,128,129,132,136,137,139,141,142,143,146,147,148,149,150,],[-70,14,-3,14,-15,14,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,14,14,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,14,-51,-2,-6,-17,-28,-59,14,-52,-29,14,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'GOSUB':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,69,72,73,81,84,85,86,87,88,91,92,93,94,95,96,97,100,101,116,118,120,122,124,126,128,129,132,136,137,139,141,142,143,146,147,148,149,150,],[-70,15,-3,15,-15,15,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,15,15,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,15,-51,-2,-6,-17,-28,-59,15,-52,-29,15,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'INPUT':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,69,72,73,81,84,85,86,87,88,91,92,93,94,95,96,97,100,101,116,118,120,122,124,126,128,129,132,136,137,139,141,142,143,146,147,148,149,150,],[-70,16,-3,16,-15,16,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,16,16,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,16,-51,-2,-6,-17,-28,-59,16,-52,-29,16,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'PRINT':([2,3,5,7,8,9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,69,72,73,81,84,85,86,87,88,91,92,93,94,95,96,97,100,101,116,118,120,122,124,126,128,129,132,136,137,139,141,142,143,146,147,148,149,150,],[-70,17,-3,17,-15,17,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,17,17,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,17,-51,-2,-6,-17,-28,-59,17,-52,-29,17,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'SUBPROCEDURE':([2,3,5,6,7,8,9,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,61,66,73,81,85,86,87,88,91,92,93,94,95,96,97,100,101,118,120,122,123,124,128,132,136,139,141,142,143,146,147,148,149,150,],[-70,-70,-3,20,-70,-13,-70,-12,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-49,-48,-58,-53,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,-51,-2,-6,20,-17,-59,-52,-29,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'END':([2,3,5,6,7,8,9,19,21,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,61,66,73,81,85,86,87,88,91,92,93,94,95,96,97,100,101,118,120,122,123,124,128,132,135,136,139,141,142,143,146,147,148,149,150,],[-70,-70,-3,-70,-70,-13,-70,49,-11,-12,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-49,-48,-58,-53,-22,-35,-42,-43,-45,-46,-50,-70,-7,-8,-9,-16,-70,-51,-2,-6,-70,-17,-59,-52,-10,-29,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'ID':([4,10,11,13,15,17,18,20,25,26,30,42,56,58,59,60,62,63,64,68,70,74,75,76,77,78,79,80,83,90,114,117,121,131,145,],[-34,-34,-34,31,33,40,48,50,48,48,40,40,81,86,81,81,-34,81,81,48,40,40,40,40,40,40,40,40,81,48,40,-34,134,48,150,]),'RETURN':([7,8,9,22,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,61,66,69,73,81,85,86,87,88,91,92,93,95,96,97,99,100,101,118,122,124,128,132,136,139,141,142,143,146,147,148,149,150,],[-70,-13,-70,-12,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-49,-48,-70,-58,-53,-22,-35,-42,-43,-45,-46,-50,-7,-8,-9,123,-16,-70,-51,-6,-17,-59,-52,-29,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'ELSE':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,72,73,81,85,86,87,88,91,92,93,95,96,97,100,101,102,118,122,124,128,132,136,139,141,142,143,146,147,148,149,150,],[-70,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,-70,-58,-53,-22,-35,-42,-43,-45,-46,-50,-7,-8,-9,-16,-70,126,-51,-6,-17,-59,-52,-29,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'EIF':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,53,61,66,72,73,81,85,86,87,88,91,92,93,95,96,97,100,101,102,118,122,124,125,126,127,128,132,136,137,139,141,142,143,144,146,147,148,149,150,],[-70,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-27,-49,-48,-70,-58,-53,-22,-35,-42,-43,-45,-46,-50,-7,-8,-9,-16,-70,-70,-51,-6,-17,136,-28,-31,-59,-52,-29,-70,-26,-70,-70,-18,-30,-20,-36,-4,-5,-19,]),'WEND':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,61,66,73,81,84,85,86,87,88,91,92,93,95,96,97,100,101,116,118,122,124,128,130,132,136,139,141,142,143,146,147,148,149,150,],[-70,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-49,-48,-58,-53,-25,-22,-35,-42,-43,-45,-46,-50,-7,-8,-9,-16,-70,-70,-51,-6,-17,-59,139,-52,-29,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'NEXT':([9,23,24,28,29,33,35,36,37,38,39,40,41,43,44,45,46,61,66,73,81,85,86,87,88,91,92,93,95,96,97,100,101,118,122,124,128,129,132,136,138,139,141,142,143,146,147,148,149,150,],[-70,-14,-15,-56,-57,-21,-41,-23,-37,-38,-39,-40,-44,-47,-53,-54,-55,-49,-48,-58,-53,-22,-35,-42,-43,-45,-46,-50,-7,-8,-9,-16,-70,-51,-6,-17,-59,-70,-52,-29,145,-26,-70,-70,-18,-20,-36,-4,-5,-19,]),'TRUE':([12,14,17,30,32,42,70,74,75,76,77,78,79,80,103,104,105,106,114,],[28,-24,28,28,28,28,28,28,28,28,28,28,28,28,28,-60,-61,-62,28,]),'FALSE':([12,14,17,30,32,42,70,74,75,76,77,78,79,80,103,104,105,106,114,],[29,-24,29,29,29,29,29,29,29,29,29,29,29,29,29,-60,-61,-62,29,]),'OPENPAR':([12,14,17,30,32,42,56,59,60,63,64,70,74,75,76,77,78,79,80,83,103,104,105,106,114,121,],[30,-24,42,42,30,42,83,83,83,83,83,42,42,42,42,42,42,42,42,83,30,-60,-61,-62,42,83,]),'WORDVAL':([16,17,30,42,70,74,75,76,77,78,79,80,114,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'INTVAL':([17,30,42,56,59,60,62,63,64,70,74,75,76,77,78,79,80,83,114,121,],[45,45,45,45,45,45,89,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'FLOATVAL':([17,30,42,56,59,60,63,64,70,74,75,76,77,78,79,80,83,114,121,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'THEN':([27,28,29,73,128,],[53,-56,-57,-58,-59,]),'GREATHER':([28,29,35,37,38,39,40,41,43,44,45,46,55,61,65,66,73,81,87,88,91,92,93,118,128,132,],[-56,-57,-41,-37,-38,-39,-40,-44,-47,-53,-54,-55,74,-49,-37,-48,-58,-53,-42,-43,-45,-46,-50,-51,-59,-52,]),'GREATHEREQUAL':([28,29,35,37,38,39,40,41,43,44,45,46,55,61,65,66,73,81,87,88,91,92,93,118,128,132,],[-56,-57,-41,-37,-38,-39,-40,-44,-47,-53,-54,-55,75,-49,-37,-48,-58,-53,-42,-43,-45,-46,-50,-51,-59,-52,]),'SMALLER':([28,29,35,37,38,39,40,41,43,44,45,46,55,61,65,66,73,81,87,88,91,92,93,118,128,132,],[-56,-57,-41,-37,-38,-39,-40,-44,-47,-53,-54,-55,76,-49,-37,-48,-58,-53,-42,-43,-45,-46,-50,-51,-59,-52,]),'SMALLEREQUAL':([28,29,35,37,38,39,40,41,43,44,45,46,55,61,65,66,73,81,87,88,91,92,93,118,128,132,],[-56,-57,-41,-37,-38,-39,-40,-44,-47,-53,-54,-55,77,-49,-37,-48,-58,-53,-42,-43,-45,-46,-50,-51,-59,-52,]),'NOTEQUAL':([28,29,35,37,38,39,40,41,43,44,45,46,55,61,65,66,73,81,87,88,91,92,93,118,128,132,],[-56,-57,-41,-37,-38,-39,-40,-44,-47,-53,-54,-55,78,-49,-37,-48,-58,-53,-42,-43,-45,-46,-50,-51,-59,-52,]),'EQUALTO':([28,29,35,37,38,39,40,41,43,44,45,46,55,61,65,66,73,81,87,88,91,92,93,118,128,132,],[-56,-57,-41,-37,-38,-39,-40,-44,-47,-53,-54,-55,79,-49,-37,-48,-58,-53,-42,-43,-45,-46,-50,-51,-59,-52,]),'error':([28,29,35,37,38,39,40,41,43,44,45,46,55,61,65,66,73,81,87,88,91,92,93,118,128,132,],[-56,-57,-41,-37,-38,-39,-40,-44,-47,-53,-54,-55,80,-49,-37,-48,-58,-53,-42,-43,-45,-46,-50,-51,-59,-52,]),'DO':([28,29,57,73,128,],[-56,-57,84,-58,-59,]),'CLOSINGPAR':([28,29,35,37,38,39,40,41,43,44,45,46,54,61,65,66,73,81,87,88,91,92,93,107,108,109,110,111,112,113,115,118,128,132,],[-56,-57,-41,-37,-38,-39,-40,-44,-47,-53,-54,-55,73,-49,93,-48,-58,-53,-42,-43,-45,-46,-50,-63,-64,-65,-66,-67,-68,-69,93,-51,-59,-52,]),'EQUALS':([31,48,51,98,],[56,-33,70,-32,]),'COMA':([34,35,48,],[58,-41,68,]),'PLUS':([37,40,41,43,44,45,46,61,65,66,81,82,87,88,91,92,93,115,118,132,133,134,],[59,-53,-44,-47,-53,-54,-55,-49,59,-48,-53,59,-42,-43,-45,-46,-50,59,-51,-52,59,-53,]),'MINUS':([37,40,41,43,44,45,46,61,65,66,81,82,87,88,91,92,93,115,118,132,133,134,],[60,-53,-44,-47,-53,-54,-55,-49,60,-48,-53,60,-42,-43,-45,-46,-50,60,-51,-52,60,-53,]),'OPENBRACKET':([40,81,86,94,95,96,97,101,134,141,142,],[62,62,117,121,-7,-8,-9,121,62,121,121,]),'MULTIPLY':([40,41,43,44,45,46,61,66,81,87,88,91,92,93,118,132,134,],[-53,63,-47,-53,-54,-55,-49,-48,-53,63,63,-45,-46,-50,-51,-52,-53,]),'DIVIDE':([40,41,43,44,45,46,61,66,81,87,88,91,92,93,118,132,134,],[-53,64,-47,-53,-54,-55,-49,-48,-53,64,64,-45,-46,-50,-51,-52,-53,]),'TO':([41,43,44,45,46,61,66,81,82,87,88,91,92,93,118,132,],[-44,-47,-53,-54,-55,-49,-48,-53,114,-42,-43,-45,-46,-50,-51,-52,]),'CLOSINGBRACKET':([41,43,44,45,46,48,61,66,81,87,88,89,91,92,93,98,118,119,132,133,134,140,],[-44,-47,-53,-54,-55,-33,-49,-48,-53,-42,-43,118,-45,-46,-50,-32,-51,132,-52,141,142,147,]),'AS':([47,48,52,98,],[67,-33,71,-32,]),'TWOPOINTS':([50,],[69,]),'INT':([67,71,],[95,95,]),'FLOAT':([67,71,],[96,96,]),'WORD':([67,71,],[97,97,]),'AND':([73,],[104,]),'OR':([73,],[105,]),'NOT':([73,],[106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'V':([2,],[3,]),'empty':([2,3,6,7,9,69,72,94,101,102,116,123,129,137,141,142,],[5,8,21,8,24,8,24,122,122,127,24,21,24,24,122,122,]),'M':([3,7,69,],[6,22,99,]),'F':([3,7,9,69,72,116,129,137,],[7,7,23,7,102,130,138,144,]),'E':([3,7,9,69,72,116,129,137,],[9,9,9,9,9,9,9,9,]),'setType':([4,10,11,62,117,],[18,25,26,90,131,]),'S':([6,123,],[19,135,]),'EL':([12,17,30,32,42,70,74,75,76,77,78,79,80,103,114,],[27,39,39,57,39,39,39,39,39,39,39,39,39,128,39,]),'while_first_conditional':([14,],[32,]),'ES':([16,17,30,42,70,74,75,76,77,78,79,80,114,],[34,38,38,38,38,38,38,38,38,38,38,38,38,]),'Ex':([17,30,42,70,74,75,76,77,78,79,80,114,],[36,55,55,100,107,108,109,110,111,112,113,129,]),'EA':([17,30,42,56,70,74,75,76,77,78,79,80,83,114,121,],[37,37,65,82,37,37,37,37,37,37,37,37,115,37,133,]),'P':([17,30,42,56,59,60,70,74,75,76,77,78,79,80,83,114,121,],[41,41,41,41,87,88,41,41,41,41,41,41,41,41,41,41,41,]),'N':([17,30,42,56,59,60,63,64,70,74,75,76,77,78,79,80,83,114,121,],[43,43,43,43,43,43,91,92,43,43,43,43,43,43,43,43,43,43,43,]),'cte':([17,30,42,56,59,60,63,64,70,74,75,76,77,78,79,80,83,114,121,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'Idv':([18,25,26,68,90,131,],[47,51,52,98,119,140,]),'O':([30,42,],[54,54,]),'saveID':([40,44,81,134,],[61,66,61,61,]),'first_conditional':([53,],[72,]),'IDEx':([58,],[85,]),'T':([67,71,],[94,101,]),'OL':([73,],[103,]),'while_second_conditional':([84,],[116,]),'Arr':([94,101,141,142,],[120,124,148,149,]),'Esf':([102,],[125,]),'second_conditional':([126,],[137,]),'final_conditional':([136,],[143,]),'while_final_conditional':([139,],[146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM V M S END','PROGRAMA',5,'p_PROGRAMA','syntax_analyzer.py',343),
  ('V -> DIM setType Idv AS T Arr','V',6,'p_V','syntax_analyzer.py',348),
  ('V -> empty','V',1,'p_V','syntax_analyzer.py',349),
  ('Arr -> OPENBRACKET EA CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',358),
  ('Arr -> OPENBRACKET ID CLOSINGBRACKET Arr','Arr',4,'p_Arr','syntax_analyzer.py',359),
  ('Arr -> empty','Arr',1,'p_Arr','syntax_analyzer.py',360),
  ('T -> INT','T',1,'p_T','syntax_analyzer.py',365),
  ('T -> FLOAT','T',1,'p_T','syntax_analyzer.py',366),
  ('T -> WORD','T',1,'p_T','syntax_analyzer.py',367),
  ('S -> SUBPROCEDURE ID TWOPOINTS M RETURN S','S',6,'p_S','syntax_analyzer.py',373),
  ('S -> empty','S',1,'p_S','syntax_analyzer.py',374),
  ('M -> F M','M',2,'p_M','syntax_analyzer.py',379),
  ('M -> empty','M',1,'p_M','syntax_analyzer.py',380),
  ('F -> E F','F',2,'p_F','syntax_analyzer.py',385),
  ('F -> empty','F',1,'p_F','syntax_analyzer.py',386),
  ('E -> LET setType Idv EQUALS Ex','E',5,'p_E','syntax_analyzer.py',391),
  ('E -> DIM setType Idv AS T Arr','E',6,'p_E','syntax_analyzer.py',392),
  ('E -> IF EL THEN first_conditional F Esf EIF final_conditional','E',8,'p_E','syntax_analyzer.py',393),
  ('E -> FOR ID EQUALS EA TO Ex F NEXT ID','E',9,'p_E','syntax_analyzer.py',394),
  ('E -> WHILE while_first_conditional EL DO while_second_conditional F WEND while_final_conditional','E',8,'p_E','syntax_analyzer.py',395),
  ('E -> GOSUB ID','E',2,'p_E','syntax_analyzer.py',396),
  ('E -> INPUT ES COMA IDEx','E',4,'p_E','syntax_analyzer.py',397),
  ('E -> PRINT Ex','E',2,'p_E','syntax_analyzer.py',398),
  ('while_first_conditional -> <empty>','while_first_conditional',0,'p_while_first_conditional','syntax_analyzer.py',412),
  ('while_second_conditional -> <empty>','while_second_conditional',0,'p_while_second_conditional','syntax_analyzer.py',421),
  ('while_final_conditional -> <empty>','while_final_conditional',0,'p_while_final_conditional','syntax_analyzer.py',432),
  ('first_conditional -> <empty>','first_conditional',0,'p_first_conditional','syntax_analyzer.py',446),
  ('second_conditional -> <empty>','second_conditional',0,'p_second_conditional','syntax_analyzer.py',457),
  ('final_conditional -> <empty>','final_conditional',0,'p_final_conditional','syntax_analyzer.py',469),
  ('Esf -> ELSE second_conditional F','Esf',3,'p_Esf','syntax_analyzer.py',477),
  ('Esf -> empty','Esf',1,'p_Esf','syntax_analyzer.py',478),
  ('Idv -> ID COMA Idv','Idv',3,'p_Idv','syntax_analyzer.py',483),
  ('Idv -> ID','Idv',1,'p_Idv','syntax_analyzer.py',484),
  ('setType -> <empty>','setType',0,'p_setType','syntax_analyzer.py',496),
  ('IDEx -> ID','IDEx',1,'p_IDEx','syntax_analyzer.py',504),
  ('IDEx -> ID OPENBRACKET setType Idv CLOSINGBRACKET','IDEx',5,'p_IDEx','syntax_analyzer.py',505),
  ('Ex -> EA','Ex',1,'p_Ex','syntax_analyzer.py',510),
  ('Ex -> ES','Ex',1,'p_Ex','syntax_analyzer.py',511),
  ('Ex -> EL','Ex',1,'p_Ex','syntax_analyzer.py',512),
  ('Ex -> ID','Ex',1,'p_Ex','syntax_analyzer.py',513),
  ('ES -> WORDVAL','ES',1,'p_ES','syntax_analyzer.py',519),
  ('EA -> EA PLUS P','EA',3,'p_EA','syntax_analyzer.py',524),
  ('EA -> EA MINUS P','EA',3,'p_EA','syntax_analyzer.py',525),
  ('EA -> P','EA',1,'p_EA','syntax_analyzer.py',526),
  ('P -> P MULTIPLY N','P',3,'p_P','syntax_analyzer.py',549),
  ('P -> P DIVIDE N','P',3,'p_P','syntax_analyzer.py',550),
  ('P -> N','P',1,'p_P','syntax_analyzer.py',551),
  ('N -> cte saveID','N',2,'p_N','syntax_analyzer.py',575),
  ('N -> ID saveID','N',2,'p_N','syntax_analyzer.py',576),
  ('N -> OPENPAR EA CLOSINGPAR','N',3,'p_N','syntax_analyzer.py',577),
  ('N -> ID OPENBRACKET INTVAL CLOSINGBRACKET','N',4,'p_N','syntax_analyzer.py',578),
  ('N -> ID OPENBRACKET setType Idv CLOSINGBRACKET','N',5,'p_N','syntax_analyzer.py',579),
  ('saveID -> <empty>','saveID',0,'p_saveID','syntax_analyzer.py',588),
  ('cte -> INTVAL','cte',1,'p_cte','syntax_analyzer.py',596),
  ('cte -> FLOATVAL','cte',1,'p_cte','syntax_analyzer.py',597),
  ('EL -> TRUE','EL',1,'p_EL','syntax_analyzer.py',603),
  ('EL -> FALSE','EL',1,'p_EL','syntax_analyzer.py',604),
  ('EL -> OPENPAR O CLOSINGPAR','EL',3,'p_EL','syntax_analyzer.py',605),
  ('EL -> OPENPAR O CLOSINGPAR OL EL','EL',5,'p_EL','syntax_analyzer.py',606),
  ('OL -> AND','OL',1,'p_OL','syntax_analyzer.py',624),
  ('OL -> OR','OL',1,'p_OL','syntax_analyzer.py',625),
  ('OL -> NOT','OL',1,'p_OL','syntax_analyzer.py',626),
  ('O -> Ex GREATHER Ex','O',3,'p_O','syntax_analyzer.py',634),
  ('O -> Ex GREATHEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',635),
  ('O -> Ex SMALLER Ex','O',3,'p_O','syntax_analyzer.py',636),
  ('O -> Ex SMALLEREQUAL Ex','O',3,'p_O','syntax_analyzer.py',637),
  ('O -> Ex NOTEQUAL Ex','O',3,'p_O','syntax_analyzer.py',638),
  ('O -> Ex EQUALTO Ex','O',3,'p_O','syntax_analyzer.py',639),
  ('O -> Ex error Ex','O',3,'p_O_error','syntax_analyzer.py',666),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',673),
]
